                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (MINGW32)
                              4 ; This file was generated Mon Oct 01 20:47:13 2012
                              5 ;--------------------------------------------------------
                              6 	.module lab3_1
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _P7_7
                             13 	.globl _P7_6
                             14 	.globl _P7_5
                             15 	.globl _P7_4
                             16 	.globl _P7_3
                             17 	.globl _P7_2
                             18 	.globl _P7_1
                             19 	.globl _P7_0
                             20 	.globl _SPIF
                             21 	.globl _WCOL
                             22 	.globl _MODF
                             23 	.globl _RXOVRN
                             24 	.globl _NSSMD1
                             25 	.globl _NSSMD0
                             26 	.globl _TXBMT
                             27 	.globl _SPIEN
                             28 	.globl _P6_7
                             29 	.globl _P6_6
                             30 	.globl _P6_5
                             31 	.globl _P6_4
                             32 	.globl _P6_3
                             33 	.globl _P6_2
                             34 	.globl _P6_1
                             35 	.globl _P6_0
                             36 	.globl _AD2EN
                             37 	.globl _AD2TM
                             38 	.globl _AD2INT
                             39 	.globl _AD2BUSY
                             40 	.globl _AD2CM2
                             41 	.globl _AD2CM1
                             42 	.globl _AD2CM0
                             43 	.globl _AD2WINT
                             44 	.globl _AD0EN
                             45 	.globl _AD0TM
                             46 	.globl _AD0INT
                             47 	.globl _AD0BUSY
                             48 	.globl _AD0CM1
                             49 	.globl _AD0CM0
                             50 	.globl _AD0WINT
                             51 	.globl _AD0LJST
                             52 	.globl _P5_7
                             53 	.globl _P5_6
                             54 	.globl _P5_5
                             55 	.globl _P5_4
                             56 	.globl _P5_3
                             57 	.globl _P5_2
                             58 	.globl _P5_1
                             59 	.globl _P5_0
                             60 	.globl _CF
                             61 	.globl _CR
                             62 	.globl _CCF5
                             63 	.globl _CCF4
                             64 	.globl _CCF3
                             65 	.globl _CCF2
                             66 	.globl _CCF1
                             67 	.globl _CCF0
                             68 	.globl _CY
                             69 	.globl _AC
                             70 	.globl _F0
                             71 	.globl _RS1
                             72 	.globl _RS0
                             73 	.globl _OV
                             74 	.globl _F1
                             75 	.globl _P
                             76 	.globl _P4_7
                             77 	.globl _P4_6
                             78 	.globl _P4_5
                             79 	.globl _P4_4
                             80 	.globl _P4_3
                             81 	.globl _P4_2
                             82 	.globl _P4_1
                             83 	.globl _P4_0
                             84 	.globl _TF4
                             85 	.globl _EXF4
                             86 	.globl _EXEN4
                             87 	.globl _TR4
                             88 	.globl _CT4
                             89 	.globl _CPRL4
                             90 	.globl _TF3
                             91 	.globl _EXF3
                             92 	.globl _EXEN3
                             93 	.globl _TR3
                             94 	.globl _CT3
                             95 	.globl _CPRL3
                             96 	.globl _TF2
                             97 	.globl _EXF2
                             98 	.globl _EXEN2
                             99 	.globl _TR2
                            100 	.globl _CT2
                            101 	.globl _CPRL2
                            102 	.globl _MAC0HO
                            103 	.globl _MAC0Z
                            104 	.globl _MAC0SO
                            105 	.globl _MAC0N
                            106 	.globl _BUSY
                            107 	.globl _ENSMB
                            108 	.globl _STA
                            109 	.globl _STO
                            110 	.globl _SI
                            111 	.globl _AA
                            112 	.globl _SMBFTE
                            113 	.globl _SMBTOE
                            114 	.globl _PT2
                            115 	.globl _PS
                            116 	.globl _PS0
                            117 	.globl _PT1
                            118 	.globl _PX1
                            119 	.globl _PT0
                            120 	.globl _PX0
                            121 	.globl _P3_7
                            122 	.globl _P3_6
                            123 	.globl _P3_5
                            124 	.globl _P3_4
                            125 	.globl _P3_3
                            126 	.globl _P3_2
                            127 	.globl _P3_1
                            128 	.globl _P3_0
                            129 	.globl _EA
                            130 	.globl _ET2
                            131 	.globl _ES
                            132 	.globl _ES0
                            133 	.globl _ET1
                            134 	.globl _EX1
                            135 	.globl _ET0
                            136 	.globl _EX0
                            137 	.globl _P2_7
                            138 	.globl _P2_6
                            139 	.globl _P2_5
                            140 	.globl _P2_4
                            141 	.globl _P2_3
                            142 	.globl _P2_2
                            143 	.globl _P2_1
                            144 	.globl _P2_0
                            145 	.globl _S1MODE
                            146 	.globl _MCE1
                            147 	.globl _REN1
                            148 	.globl _TB81
                            149 	.globl _RB81
                            150 	.globl _TI1
                            151 	.globl _RI1
                            152 	.globl _SM00
                            153 	.globl _SM10
                            154 	.globl _SM20
                            155 	.globl _REN
                            156 	.globl _REN0
                            157 	.globl _TB80
                            158 	.globl _RB80
                            159 	.globl _TI
                            160 	.globl _TI0
                            161 	.globl _RI
                            162 	.globl _RI0
                            163 	.globl _P1_7
                            164 	.globl _P1_6
                            165 	.globl _P1_5
                            166 	.globl _P1_4
                            167 	.globl _P1_3
                            168 	.globl _P1_2
                            169 	.globl _P1_1
                            170 	.globl _P1_0
                            171 	.globl _FLHBUSY
                            172 	.globl _CP1EN
                            173 	.globl _CP1OUT
                            174 	.globl _CP1RIF
                            175 	.globl _CP1FIF
                            176 	.globl _CP1HYP1
                            177 	.globl _CP1HYP0
                            178 	.globl _CP1HYN1
                            179 	.globl _CP1HYN0
                            180 	.globl _CP0EN
                            181 	.globl _CP0OUT
                            182 	.globl _CP0RIF
                            183 	.globl _CP0FIF
                            184 	.globl _CP0HYP1
                            185 	.globl _CP0HYP0
                            186 	.globl _CP0HYN1
                            187 	.globl _CP0HYN0
                            188 	.globl _TF1
                            189 	.globl _TR1
                            190 	.globl _TF0
                            191 	.globl _TR0
                            192 	.globl _IE1
                            193 	.globl _IT1
                            194 	.globl _IE0
                            195 	.globl _IT0
                            196 	.globl _P0_7
                            197 	.globl _P0_6
                            198 	.globl _P0_5
                            199 	.globl _P0_4
                            200 	.globl _P0_3
                            201 	.globl _P0_2
                            202 	.globl _P0_1
                            203 	.globl _P0_0
                            204 	.globl _MAC0RND
                            205 	.globl _MAC0ACC
                            206 	.globl _MAC0A
                            207 	.globl _RCAP4
                            208 	.globl _TMR4
                            209 	.globl _DAC1
                            210 	.globl _RCAP3
                            211 	.globl _TMR3
                            212 	.globl _PCA0CP5
                            213 	.globl _PCA0CP4
                            214 	.globl _PCA0CP3
                            215 	.globl _PCA0CP2
                            216 	.globl _PCA0CP1
                            217 	.globl _PCA0CP0
                            218 	.globl _PCA0
                            219 	.globl _DAC0
                            220 	.globl _ADC0LT
                            221 	.globl _ADC0GT
                            222 	.globl _ADC0
                            223 	.globl _RCAP2
                            224 	.globl _TMR2
                            225 	.globl _TMR1
                            226 	.globl _TMR0
                            227 	.globl _P7
                            228 	.globl _P6
                            229 	.globl _XBR2
                            230 	.globl _XBR1
                            231 	.globl _XBR0
                            232 	.globl _P5
                            233 	.globl _P4
                            234 	.globl _FLACL
                            235 	.globl _P1MDIN
                            236 	.globl _P3MDOUT
                            237 	.globl _P2MDOUT
                            238 	.globl _P1MDOUT
                            239 	.globl _P0MDOUT
                            240 	.globl _CCH0LC
                            241 	.globl _CCH0TN
                            242 	.globl _CCH0CN
                            243 	.globl _P7MDOUT
                            244 	.globl _P6MDOUT
                            245 	.globl _P5MDOUT
                            246 	.globl _P4MDOUT
                            247 	.globl _CCH0MA
                            248 	.globl _CLKSEL
                            249 	.globl _SFRPGCN
                            250 	.globl _PLL0FLT
                            251 	.globl _PLL0MUL
                            252 	.globl _PLL0DIV
                            253 	.globl _OSCXCN
                            254 	.globl _OSCICL
                            255 	.globl _OSCICN
                            256 	.globl _PLL0CN
                            257 	.globl _FLSTAT
                            258 	.globl _MAC0RNDH
                            259 	.globl _MAC0RNDL
                            260 	.globl _MAC0CF
                            261 	.globl _MAC0AH
                            262 	.globl _MAC0AL
                            263 	.globl _MAC0STA
                            264 	.globl _MAC0OVR
                            265 	.globl _MAC0ACC3
                            266 	.globl _MAC0ACC2
                            267 	.globl _MAC0ACC1
                            268 	.globl _MAC0ACC0
                            269 	.globl _MAC0BH
                            270 	.globl _MAC0BL
                            271 	.globl _ADC2CN
                            272 	.globl _TMR4H
                            273 	.globl _TMR4L
                            274 	.globl _RCAP4H
                            275 	.globl _RCAP4L
                            276 	.globl _TMR4CF
                            277 	.globl _TMR4CN
                            278 	.globl _ADC2LT
                            279 	.globl _ADC2GT
                            280 	.globl _ADC2
                            281 	.globl _ADC2CF
                            282 	.globl _AMX2SL
                            283 	.globl _AMX2CF
                            284 	.globl _CPT1MD
                            285 	.globl _CPT1CN
                            286 	.globl _DAC1CN
                            287 	.globl _DAC1H
                            288 	.globl _DAC1L
                            289 	.globl _TMR3H
                            290 	.globl _TMR3L
                            291 	.globl _RCAP3H
                            292 	.globl _RCAP3L
                            293 	.globl _TMR3CF
                            294 	.globl _TMR3CN
                            295 	.globl _SBUF1
                            296 	.globl _SCON1
                            297 	.globl _CPT0MD
                            298 	.globl _CPT0CN
                            299 	.globl _PCA0CPH1
                            300 	.globl _PCA0CPL1
                            301 	.globl _PCA0CPH0
                            302 	.globl _PCA0CPL0
                            303 	.globl _PCA0H
                            304 	.globl _PCA0L
                            305 	.globl _SPI0CN
                            306 	.globl _RSTSRC
                            307 	.globl _PCA0CPH4
                            308 	.globl _PCA0CPL4
                            309 	.globl _PCA0CPH3
                            310 	.globl _PCA0CPL3
                            311 	.globl _PCA0CPH2
                            312 	.globl _PCA0CPL2
                            313 	.globl _ADC0CN
                            314 	.globl _PCA0CPH5
                            315 	.globl _PCA0CPL5
                            316 	.globl _PCA0CPM5
                            317 	.globl _PCA0CPM4
                            318 	.globl _PCA0CPM3
                            319 	.globl _PCA0CPM2
                            320 	.globl _PCA0CPM1
                            321 	.globl _PCA0CPM0
                            322 	.globl _PCA0MD
                            323 	.globl _PCA0CN
                            324 	.globl _DAC0CN
                            325 	.globl _DAC0H
                            326 	.globl _DAC0L
                            327 	.globl _REF0CN
                            328 	.globl _SMB0CR
                            329 	.globl _TH2
                            330 	.globl _TMR2H
                            331 	.globl _TL2
                            332 	.globl _TMR2L
                            333 	.globl _RCAP2H
                            334 	.globl _RCAP2L
                            335 	.globl _TMR2CF
                            336 	.globl _TMR2CN
                            337 	.globl _ADC0LTH
                            338 	.globl _ADC0LTL
                            339 	.globl _ADC0GTH
                            340 	.globl _ADC0GTL
                            341 	.globl _SMB0ADR
                            342 	.globl _SMB0DAT
                            343 	.globl _SMB0STA
                            344 	.globl _SMB0CN
                            345 	.globl _ADC0H
                            346 	.globl _ADC0L
                            347 	.globl _ADC0CF
                            348 	.globl _AMX0SL
                            349 	.globl _AMX0CF
                            350 	.globl _SADEN0
                            351 	.globl _FLSCL
                            352 	.globl _SADDR0
                            353 	.globl _EMI0CF
                            354 	.globl __XPAGE
                            355 	.globl _EMI0CN
                            356 	.globl _EMI0TC
                            357 	.globl _SPI0CKR
                            358 	.globl _SPI0DAT
                            359 	.globl _SPI0CFG
                            360 	.globl _SBUF
                            361 	.globl _SBUF0
                            362 	.globl _SCON
                            363 	.globl _SCON0
                            364 	.globl _SSTA0
                            365 	.globl _PSCTL
                            366 	.globl _CKCON
                            367 	.globl _TH1
                            368 	.globl _TH0
                            369 	.globl _TL1
                            370 	.globl _TL0
                            371 	.globl _TMOD
                            372 	.globl _TCON
                            373 	.globl _WDTCN
                            374 	.globl _EIP2
                            375 	.globl _EIP1
                            376 	.globl _B
                            377 	.globl _EIE2
                            378 	.globl _EIE1
                            379 	.globl _ACC
                            380 	.globl _PSW
                            381 	.globl _IP
                            382 	.globl _PSBANK
                            383 	.globl _P3
                            384 	.globl _IE
                            385 	.globl _P2
                            386 	.globl _P1
                            387 	.globl _PCON
                            388 	.globl _SFRLAST
                            389 	.globl _SFRNEXT
                            390 	.globl _SFRPAGE
                            391 	.globl _DPH
                            392 	.globl _DPL
                            393 	.globl _SP
                            394 	.globl _P0
                            395 	.globl _overflows
                            396 	.globl _putchar
                            397 	.globl _getchar
                            398 	.globl _main
                            399 	.globl _SYSCLK_INIT
                            400 	.globl _PORT_INIT
                            401 	.globl _UART_INIT
                            402 	.globl _SPI_Init
                            403 	.globl _Interrupts_Init
                            404 	.globl _Timer_Init
                            405 	.globl _Timer1_ISR
                            406 	.globl _Timer2_ISR
                            407 ;--------------------------------------------------------
                            408 ; special function registers
                            409 ;--------------------------------------------------------
                            410 	.area RSEG    (DATA)
                    0080    411 G$P0$0$0 == 0x0080
                    0080    412 _P0	=	0x0080
                    0081    413 G$SP$0$0 == 0x0081
                    0081    414 _SP	=	0x0081
                    0082    415 G$DPL$0$0 == 0x0082
                    0082    416 _DPL	=	0x0082
                    0083    417 G$DPH$0$0 == 0x0083
                    0083    418 _DPH	=	0x0083
                    0084    419 G$SFRPAGE$0$0 == 0x0084
                    0084    420 _SFRPAGE	=	0x0084
                    0085    421 G$SFRNEXT$0$0 == 0x0085
                    0085    422 _SFRNEXT	=	0x0085
                    0086    423 G$SFRLAST$0$0 == 0x0086
                    0086    424 _SFRLAST	=	0x0086
                    0087    425 G$PCON$0$0 == 0x0087
                    0087    426 _PCON	=	0x0087
                    0090    427 G$P1$0$0 == 0x0090
                    0090    428 _P1	=	0x0090
                    00A0    429 G$P2$0$0 == 0x00a0
                    00A0    430 _P2	=	0x00a0
                    00A8    431 G$IE$0$0 == 0x00a8
                    00A8    432 _IE	=	0x00a8
                    00B0    433 G$P3$0$0 == 0x00b0
                    00B0    434 _P3	=	0x00b0
                    00B1    435 G$PSBANK$0$0 == 0x00b1
                    00B1    436 _PSBANK	=	0x00b1
                    00B8    437 G$IP$0$0 == 0x00b8
                    00B8    438 _IP	=	0x00b8
                    00D0    439 G$PSW$0$0 == 0x00d0
                    00D0    440 _PSW	=	0x00d0
                    00E0    441 G$ACC$0$0 == 0x00e0
                    00E0    442 _ACC	=	0x00e0
                    00E6    443 G$EIE1$0$0 == 0x00e6
                    00E6    444 _EIE1	=	0x00e6
                    00E7    445 G$EIE2$0$0 == 0x00e7
                    00E7    446 _EIE2	=	0x00e7
                    00F0    447 G$B$0$0 == 0x00f0
                    00F0    448 _B	=	0x00f0
                    00F6    449 G$EIP1$0$0 == 0x00f6
                    00F6    450 _EIP1	=	0x00f6
                    00F7    451 G$EIP2$0$0 == 0x00f7
                    00F7    452 _EIP2	=	0x00f7
                    00FF    453 G$WDTCN$0$0 == 0x00ff
                    00FF    454 _WDTCN	=	0x00ff
                    0088    455 G$TCON$0$0 == 0x0088
                    0088    456 _TCON	=	0x0088
                    0089    457 G$TMOD$0$0 == 0x0089
                    0089    458 _TMOD	=	0x0089
                    008A    459 G$TL0$0$0 == 0x008a
                    008A    460 _TL0	=	0x008a
                    008B    461 G$TL1$0$0 == 0x008b
                    008B    462 _TL1	=	0x008b
                    008C    463 G$TH0$0$0 == 0x008c
                    008C    464 _TH0	=	0x008c
                    008D    465 G$TH1$0$0 == 0x008d
                    008D    466 _TH1	=	0x008d
                    008E    467 G$CKCON$0$0 == 0x008e
                    008E    468 _CKCON	=	0x008e
                    008F    469 G$PSCTL$0$0 == 0x008f
                    008F    470 _PSCTL	=	0x008f
                    0091    471 G$SSTA0$0$0 == 0x0091
                    0091    472 _SSTA0	=	0x0091
                    0098    473 G$SCON0$0$0 == 0x0098
                    0098    474 _SCON0	=	0x0098
                    0098    475 G$SCON$0$0 == 0x0098
                    0098    476 _SCON	=	0x0098
                    0099    477 G$SBUF0$0$0 == 0x0099
                    0099    478 _SBUF0	=	0x0099
                    0099    479 G$SBUF$0$0 == 0x0099
                    0099    480 _SBUF	=	0x0099
                    009A    481 G$SPI0CFG$0$0 == 0x009a
                    009A    482 _SPI0CFG	=	0x009a
                    009B    483 G$SPI0DAT$0$0 == 0x009b
                    009B    484 _SPI0DAT	=	0x009b
                    009D    485 G$SPI0CKR$0$0 == 0x009d
                    009D    486 _SPI0CKR	=	0x009d
                    00A1    487 G$EMI0TC$0$0 == 0x00a1
                    00A1    488 _EMI0TC	=	0x00a1
                    00A2    489 G$EMI0CN$0$0 == 0x00a2
                    00A2    490 _EMI0CN	=	0x00a2
                    00A2    491 G$_XPAGE$0$0 == 0x00a2
                    00A2    492 __XPAGE	=	0x00a2
                    00A3    493 G$EMI0CF$0$0 == 0x00a3
                    00A3    494 _EMI0CF	=	0x00a3
                    00A9    495 G$SADDR0$0$0 == 0x00a9
                    00A9    496 _SADDR0	=	0x00a9
                    00B7    497 G$FLSCL$0$0 == 0x00b7
                    00B7    498 _FLSCL	=	0x00b7
                    00B9    499 G$SADEN0$0$0 == 0x00b9
                    00B9    500 _SADEN0	=	0x00b9
                    00BA    501 G$AMX0CF$0$0 == 0x00ba
                    00BA    502 _AMX0CF	=	0x00ba
                    00BB    503 G$AMX0SL$0$0 == 0x00bb
                    00BB    504 _AMX0SL	=	0x00bb
                    00BC    505 G$ADC0CF$0$0 == 0x00bc
                    00BC    506 _ADC0CF	=	0x00bc
                    00BE    507 G$ADC0L$0$0 == 0x00be
                    00BE    508 _ADC0L	=	0x00be
                    00BF    509 G$ADC0H$0$0 == 0x00bf
                    00BF    510 _ADC0H	=	0x00bf
                    00C0    511 G$SMB0CN$0$0 == 0x00c0
                    00C0    512 _SMB0CN	=	0x00c0
                    00C1    513 G$SMB0STA$0$0 == 0x00c1
                    00C1    514 _SMB0STA	=	0x00c1
                    00C2    515 G$SMB0DAT$0$0 == 0x00c2
                    00C2    516 _SMB0DAT	=	0x00c2
                    00C3    517 G$SMB0ADR$0$0 == 0x00c3
                    00C3    518 _SMB0ADR	=	0x00c3
                    00C4    519 G$ADC0GTL$0$0 == 0x00c4
                    00C4    520 _ADC0GTL	=	0x00c4
                    00C5    521 G$ADC0GTH$0$0 == 0x00c5
                    00C5    522 _ADC0GTH	=	0x00c5
                    00C6    523 G$ADC0LTL$0$0 == 0x00c6
                    00C6    524 _ADC0LTL	=	0x00c6
                    00C7    525 G$ADC0LTH$0$0 == 0x00c7
                    00C7    526 _ADC0LTH	=	0x00c7
                    00C8    527 G$TMR2CN$0$0 == 0x00c8
                    00C8    528 _TMR2CN	=	0x00c8
                    00C9    529 G$TMR2CF$0$0 == 0x00c9
                    00C9    530 _TMR2CF	=	0x00c9
                    00CA    531 G$RCAP2L$0$0 == 0x00ca
                    00CA    532 _RCAP2L	=	0x00ca
                    00CB    533 G$RCAP2H$0$0 == 0x00cb
                    00CB    534 _RCAP2H	=	0x00cb
                    00CC    535 G$TMR2L$0$0 == 0x00cc
                    00CC    536 _TMR2L	=	0x00cc
                    00CC    537 G$TL2$0$0 == 0x00cc
                    00CC    538 _TL2	=	0x00cc
                    00CD    539 G$TMR2H$0$0 == 0x00cd
                    00CD    540 _TMR2H	=	0x00cd
                    00CD    541 G$TH2$0$0 == 0x00cd
                    00CD    542 _TH2	=	0x00cd
                    00CF    543 G$SMB0CR$0$0 == 0x00cf
                    00CF    544 _SMB0CR	=	0x00cf
                    00D1    545 G$REF0CN$0$0 == 0x00d1
                    00D1    546 _REF0CN	=	0x00d1
                    00D2    547 G$DAC0L$0$0 == 0x00d2
                    00D2    548 _DAC0L	=	0x00d2
                    00D3    549 G$DAC0H$0$0 == 0x00d3
                    00D3    550 _DAC0H	=	0x00d3
                    00D4    551 G$DAC0CN$0$0 == 0x00d4
                    00D4    552 _DAC0CN	=	0x00d4
                    00D8    553 G$PCA0CN$0$0 == 0x00d8
                    00D8    554 _PCA0CN	=	0x00d8
                    00D9    555 G$PCA0MD$0$0 == 0x00d9
                    00D9    556 _PCA0MD	=	0x00d9
                    00DA    557 G$PCA0CPM0$0$0 == 0x00da
                    00DA    558 _PCA0CPM0	=	0x00da
                    00DB    559 G$PCA0CPM1$0$0 == 0x00db
                    00DB    560 _PCA0CPM1	=	0x00db
                    00DC    561 G$PCA0CPM2$0$0 == 0x00dc
                    00DC    562 _PCA0CPM2	=	0x00dc
                    00DD    563 G$PCA0CPM3$0$0 == 0x00dd
                    00DD    564 _PCA0CPM3	=	0x00dd
                    00DE    565 G$PCA0CPM4$0$0 == 0x00de
                    00DE    566 _PCA0CPM4	=	0x00de
                    00DF    567 G$PCA0CPM5$0$0 == 0x00df
                    00DF    568 _PCA0CPM5	=	0x00df
                    00E1    569 G$PCA0CPL5$0$0 == 0x00e1
                    00E1    570 _PCA0CPL5	=	0x00e1
                    00E2    571 G$PCA0CPH5$0$0 == 0x00e2
                    00E2    572 _PCA0CPH5	=	0x00e2
                    00E8    573 G$ADC0CN$0$0 == 0x00e8
                    00E8    574 _ADC0CN	=	0x00e8
                    00E9    575 G$PCA0CPL2$0$0 == 0x00e9
                    00E9    576 _PCA0CPL2	=	0x00e9
                    00EA    577 G$PCA0CPH2$0$0 == 0x00ea
                    00EA    578 _PCA0CPH2	=	0x00ea
                    00EB    579 G$PCA0CPL3$0$0 == 0x00eb
                    00EB    580 _PCA0CPL3	=	0x00eb
                    00EC    581 G$PCA0CPH3$0$0 == 0x00ec
                    00EC    582 _PCA0CPH3	=	0x00ec
                    00ED    583 G$PCA0CPL4$0$0 == 0x00ed
                    00ED    584 _PCA0CPL4	=	0x00ed
                    00EE    585 G$PCA0CPH4$0$0 == 0x00ee
                    00EE    586 _PCA0CPH4	=	0x00ee
                    00EF    587 G$RSTSRC$0$0 == 0x00ef
                    00EF    588 _RSTSRC	=	0x00ef
                    00F8    589 G$SPI0CN$0$0 == 0x00f8
                    00F8    590 _SPI0CN	=	0x00f8
                    00F9    591 G$PCA0L$0$0 == 0x00f9
                    00F9    592 _PCA0L	=	0x00f9
                    00FA    593 G$PCA0H$0$0 == 0x00fa
                    00FA    594 _PCA0H	=	0x00fa
                    00FB    595 G$PCA0CPL0$0$0 == 0x00fb
                    00FB    596 _PCA0CPL0	=	0x00fb
                    00FC    597 G$PCA0CPH0$0$0 == 0x00fc
                    00FC    598 _PCA0CPH0	=	0x00fc
                    00FD    599 G$PCA0CPL1$0$0 == 0x00fd
                    00FD    600 _PCA0CPL1	=	0x00fd
                    00FE    601 G$PCA0CPH1$0$0 == 0x00fe
                    00FE    602 _PCA0CPH1	=	0x00fe
                    0088    603 G$CPT0CN$0$0 == 0x0088
                    0088    604 _CPT0CN	=	0x0088
                    0089    605 G$CPT0MD$0$0 == 0x0089
                    0089    606 _CPT0MD	=	0x0089
                    0098    607 G$SCON1$0$0 == 0x0098
                    0098    608 _SCON1	=	0x0098
                    0099    609 G$SBUF1$0$0 == 0x0099
                    0099    610 _SBUF1	=	0x0099
                    00C8    611 G$TMR3CN$0$0 == 0x00c8
                    00C8    612 _TMR3CN	=	0x00c8
                    00C9    613 G$TMR3CF$0$0 == 0x00c9
                    00C9    614 _TMR3CF	=	0x00c9
                    00CA    615 G$RCAP3L$0$0 == 0x00ca
                    00CA    616 _RCAP3L	=	0x00ca
                    00CB    617 G$RCAP3H$0$0 == 0x00cb
                    00CB    618 _RCAP3H	=	0x00cb
                    00CC    619 G$TMR3L$0$0 == 0x00cc
                    00CC    620 _TMR3L	=	0x00cc
                    00CD    621 G$TMR3H$0$0 == 0x00cd
                    00CD    622 _TMR3H	=	0x00cd
                    00D2    623 G$DAC1L$0$0 == 0x00d2
                    00D2    624 _DAC1L	=	0x00d2
                    00D3    625 G$DAC1H$0$0 == 0x00d3
                    00D3    626 _DAC1H	=	0x00d3
                    00D4    627 G$DAC1CN$0$0 == 0x00d4
                    00D4    628 _DAC1CN	=	0x00d4
                    0088    629 G$CPT1CN$0$0 == 0x0088
                    0088    630 _CPT1CN	=	0x0088
                    0089    631 G$CPT1MD$0$0 == 0x0089
                    0089    632 _CPT1MD	=	0x0089
                    00BA    633 G$AMX2CF$0$0 == 0x00ba
                    00BA    634 _AMX2CF	=	0x00ba
                    00BB    635 G$AMX2SL$0$0 == 0x00bb
                    00BB    636 _AMX2SL	=	0x00bb
                    00BC    637 G$ADC2CF$0$0 == 0x00bc
                    00BC    638 _ADC2CF	=	0x00bc
                    00BE    639 G$ADC2$0$0 == 0x00be
                    00BE    640 _ADC2	=	0x00be
                    00C4    641 G$ADC2GT$0$0 == 0x00c4
                    00C4    642 _ADC2GT	=	0x00c4
                    00C6    643 G$ADC2LT$0$0 == 0x00c6
                    00C6    644 _ADC2LT	=	0x00c6
                    00C8    645 G$TMR4CN$0$0 == 0x00c8
                    00C8    646 _TMR4CN	=	0x00c8
                    00C9    647 G$TMR4CF$0$0 == 0x00c9
                    00C9    648 _TMR4CF	=	0x00c9
                    00CA    649 G$RCAP4L$0$0 == 0x00ca
                    00CA    650 _RCAP4L	=	0x00ca
                    00CB    651 G$RCAP4H$0$0 == 0x00cb
                    00CB    652 _RCAP4H	=	0x00cb
                    00CC    653 G$TMR4L$0$0 == 0x00cc
                    00CC    654 _TMR4L	=	0x00cc
                    00CD    655 G$TMR4H$0$0 == 0x00cd
                    00CD    656 _TMR4H	=	0x00cd
                    00E8    657 G$ADC2CN$0$0 == 0x00e8
                    00E8    658 _ADC2CN	=	0x00e8
                    0091    659 G$MAC0BL$0$0 == 0x0091
                    0091    660 _MAC0BL	=	0x0091
                    0092    661 G$MAC0BH$0$0 == 0x0092
                    0092    662 _MAC0BH	=	0x0092
                    0093    663 G$MAC0ACC0$0$0 == 0x0093
                    0093    664 _MAC0ACC0	=	0x0093
                    0094    665 G$MAC0ACC1$0$0 == 0x0094
                    0094    666 _MAC0ACC1	=	0x0094
                    0095    667 G$MAC0ACC2$0$0 == 0x0095
                    0095    668 _MAC0ACC2	=	0x0095
                    0096    669 G$MAC0ACC3$0$0 == 0x0096
                    0096    670 _MAC0ACC3	=	0x0096
                    0097    671 G$MAC0OVR$0$0 == 0x0097
                    0097    672 _MAC0OVR	=	0x0097
                    00C0    673 G$MAC0STA$0$0 == 0x00c0
                    00C0    674 _MAC0STA	=	0x00c0
                    00C1    675 G$MAC0AL$0$0 == 0x00c1
                    00C1    676 _MAC0AL	=	0x00c1
                    00C2    677 G$MAC0AH$0$0 == 0x00c2
                    00C2    678 _MAC0AH	=	0x00c2
                    00C3    679 G$MAC0CF$0$0 == 0x00c3
                    00C3    680 _MAC0CF	=	0x00c3
                    00CE    681 G$MAC0RNDL$0$0 == 0x00ce
                    00CE    682 _MAC0RNDL	=	0x00ce
                    00CF    683 G$MAC0RNDH$0$0 == 0x00cf
                    00CF    684 _MAC0RNDH	=	0x00cf
                    0088    685 G$FLSTAT$0$0 == 0x0088
                    0088    686 _FLSTAT	=	0x0088
                    0089    687 G$PLL0CN$0$0 == 0x0089
                    0089    688 _PLL0CN	=	0x0089
                    008A    689 G$OSCICN$0$0 == 0x008a
                    008A    690 _OSCICN	=	0x008a
                    008B    691 G$OSCICL$0$0 == 0x008b
                    008B    692 _OSCICL	=	0x008b
                    008C    693 G$OSCXCN$0$0 == 0x008c
                    008C    694 _OSCXCN	=	0x008c
                    008D    695 G$PLL0DIV$0$0 == 0x008d
                    008D    696 _PLL0DIV	=	0x008d
                    008E    697 G$PLL0MUL$0$0 == 0x008e
                    008E    698 _PLL0MUL	=	0x008e
                    008F    699 G$PLL0FLT$0$0 == 0x008f
                    008F    700 _PLL0FLT	=	0x008f
                    0096    701 G$SFRPGCN$0$0 == 0x0096
                    0096    702 _SFRPGCN	=	0x0096
                    0097    703 G$CLKSEL$0$0 == 0x0097
                    0097    704 _CLKSEL	=	0x0097
                    009A    705 G$CCH0MA$0$0 == 0x009a
                    009A    706 _CCH0MA	=	0x009a
                    009C    707 G$P4MDOUT$0$0 == 0x009c
                    009C    708 _P4MDOUT	=	0x009c
                    009D    709 G$P5MDOUT$0$0 == 0x009d
                    009D    710 _P5MDOUT	=	0x009d
                    009E    711 G$P6MDOUT$0$0 == 0x009e
                    009E    712 _P6MDOUT	=	0x009e
                    009F    713 G$P7MDOUT$0$0 == 0x009f
                    009F    714 _P7MDOUT	=	0x009f
                    00A1    715 G$CCH0CN$0$0 == 0x00a1
                    00A1    716 _CCH0CN	=	0x00a1
                    00A2    717 G$CCH0TN$0$0 == 0x00a2
                    00A2    718 _CCH0TN	=	0x00a2
                    00A3    719 G$CCH0LC$0$0 == 0x00a3
                    00A3    720 _CCH0LC	=	0x00a3
                    00A4    721 G$P0MDOUT$0$0 == 0x00a4
                    00A4    722 _P0MDOUT	=	0x00a4
                    00A5    723 G$P1MDOUT$0$0 == 0x00a5
                    00A5    724 _P1MDOUT	=	0x00a5
                    00A6    725 G$P2MDOUT$0$0 == 0x00a6
                    00A6    726 _P2MDOUT	=	0x00a6
                    00A7    727 G$P3MDOUT$0$0 == 0x00a7
                    00A7    728 _P3MDOUT	=	0x00a7
                    00AD    729 G$P1MDIN$0$0 == 0x00ad
                    00AD    730 _P1MDIN	=	0x00ad
                    00B7    731 G$FLACL$0$0 == 0x00b7
                    00B7    732 _FLACL	=	0x00b7
                    00C8    733 G$P4$0$0 == 0x00c8
                    00C8    734 _P4	=	0x00c8
                    00D8    735 G$P5$0$0 == 0x00d8
                    00D8    736 _P5	=	0x00d8
                    00E1    737 G$XBR0$0$0 == 0x00e1
                    00E1    738 _XBR0	=	0x00e1
                    00E2    739 G$XBR1$0$0 == 0x00e2
                    00E2    740 _XBR1	=	0x00e2
                    00E3    741 G$XBR2$0$0 == 0x00e3
                    00E3    742 _XBR2	=	0x00e3
                    00E8    743 G$P6$0$0 == 0x00e8
                    00E8    744 _P6	=	0x00e8
                    00F8    745 G$P7$0$0 == 0x00f8
                    00F8    746 _P7	=	0x00f8
                    8C8A    747 G$TMR0$0$0 == 0x8c8a
                    8C8A    748 _TMR0	=	0x8c8a
                    8D8B    749 G$TMR1$0$0 == 0x8d8b
                    8D8B    750 _TMR1	=	0x8d8b
                    CDCC    751 G$TMR2$0$0 == 0xcdcc
                    CDCC    752 _TMR2	=	0xcdcc
                    CBCA    753 G$RCAP2$0$0 == 0xcbca
                    CBCA    754 _RCAP2	=	0xcbca
                    BFBE    755 G$ADC0$0$0 == 0xbfbe
                    BFBE    756 _ADC0	=	0xbfbe
                    C5C4    757 G$ADC0GT$0$0 == 0xc5c4
                    C5C4    758 _ADC0GT	=	0xc5c4
                    C7C6    759 G$ADC0LT$0$0 == 0xc7c6
                    C7C6    760 _ADC0LT	=	0xc7c6
                    D3D2    761 G$DAC0$0$0 == 0xd3d2
                    D3D2    762 _DAC0	=	0xd3d2
                    FAF9    763 G$PCA0$0$0 == 0xfaf9
                    FAF9    764 _PCA0	=	0xfaf9
                    FCFB    765 G$PCA0CP0$0$0 == 0xfcfb
                    FCFB    766 _PCA0CP0	=	0xfcfb
                    FEFD    767 G$PCA0CP1$0$0 == 0xfefd
                    FEFD    768 _PCA0CP1	=	0xfefd
                    EAE9    769 G$PCA0CP2$0$0 == 0xeae9
                    EAE9    770 _PCA0CP2	=	0xeae9
                    ECEB    771 G$PCA0CP3$0$0 == 0xeceb
                    ECEB    772 _PCA0CP3	=	0xeceb
                    EEED    773 G$PCA0CP4$0$0 == 0xeeed
                    EEED    774 _PCA0CP4	=	0xeeed
                    E2E1    775 G$PCA0CP5$0$0 == 0xe2e1
                    E2E1    776 _PCA0CP5	=	0xe2e1
                    CDCC    777 G$TMR3$0$0 == 0xcdcc
                    CDCC    778 _TMR3	=	0xcdcc
                    CBCA    779 G$RCAP3$0$0 == 0xcbca
                    CBCA    780 _RCAP3	=	0xcbca
                    D3D2    781 G$DAC1$0$0 == 0xd3d2
                    D3D2    782 _DAC1	=	0xd3d2
                    CDCC    783 G$TMR4$0$0 == 0xcdcc
                    CDCC    784 _TMR4	=	0xcdcc
                    CBCA    785 G$RCAP4$0$0 == 0xcbca
                    CBCA    786 _RCAP4	=	0xcbca
                    C2C1    787 G$MAC0A$0$0 == 0xc2c1
                    C2C1    788 _MAC0A	=	0xc2c1
                    96959493    789 G$MAC0ACC$0$0 == 0x96959493
                    96959493    790 _MAC0ACC	=	0x96959493
                    CFCE    791 G$MAC0RND$0$0 == 0xcfce
                    CFCE    792 _MAC0RND	=	0xcfce
                            793 ;--------------------------------------------------------
                            794 ; special function bits
                            795 ;--------------------------------------------------------
                            796 	.area RSEG    (DATA)
                    0080    797 G$P0_0$0$0 == 0x0080
                    0080    798 _P0_0	=	0x0080
                    0081    799 G$P0_1$0$0 == 0x0081
                    0081    800 _P0_1	=	0x0081
                    0082    801 G$P0_2$0$0 == 0x0082
                    0082    802 _P0_2	=	0x0082
                    0083    803 G$P0_3$0$0 == 0x0083
                    0083    804 _P0_3	=	0x0083
                    0084    805 G$P0_4$0$0 == 0x0084
                    0084    806 _P0_4	=	0x0084
                    0085    807 G$P0_5$0$0 == 0x0085
                    0085    808 _P0_5	=	0x0085
                    0086    809 G$P0_6$0$0 == 0x0086
                    0086    810 _P0_6	=	0x0086
                    0087    811 G$P0_7$0$0 == 0x0087
                    0087    812 _P0_7	=	0x0087
                    0088    813 G$IT0$0$0 == 0x0088
                    0088    814 _IT0	=	0x0088
                    0089    815 G$IE0$0$0 == 0x0089
                    0089    816 _IE0	=	0x0089
                    008A    817 G$IT1$0$0 == 0x008a
                    008A    818 _IT1	=	0x008a
                    008B    819 G$IE1$0$0 == 0x008b
                    008B    820 _IE1	=	0x008b
                    008C    821 G$TR0$0$0 == 0x008c
                    008C    822 _TR0	=	0x008c
                    008D    823 G$TF0$0$0 == 0x008d
                    008D    824 _TF0	=	0x008d
                    008E    825 G$TR1$0$0 == 0x008e
                    008E    826 _TR1	=	0x008e
                    008F    827 G$TF1$0$0 == 0x008f
                    008F    828 _TF1	=	0x008f
                    0088    829 G$CP0HYN0$0$0 == 0x0088
                    0088    830 _CP0HYN0	=	0x0088
                    0089    831 G$CP0HYN1$0$0 == 0x0089
                    0089    832 _CP0HYN1	=	0x0089
                    008A    833 G$CP0HYP0$0$0 == 0x008a
                    008A    834 _CP0HYP0	=	0x008a
                    008B    835 G$CP0HYP1$0$0 == 0x008b
                    008B    836 _CP0HYP1	=	0x008b
                    008C    837 G$CP0FIF$0$0 == 0x008c
                    008C    838 _CP0FIF	=	0x008c
                    008D    839 G$CP0RIF$0$0 == 0x008d
                    008D    840 _CP0RIF	=	0x008d
                    008E    841 G$CP0OUT$0$0 == 0x008e
                    008E    842 _CP0OUT	=	0x008e
                    008F    843 G$CP0EN$0$0 == 0x008f
                    008F    844 _CP0EN	=	0x008f
                    0088    845 G$CP1HYN0$0$0 == 0x0088
                    0088    846 _CP1HYN0	=	0x0088
                    0089    847 G$CP1HYN1$0$0 == 0x0089
                    0089    848 _CP1HYN1	=	0x0089
                    008A    849 G$CP1HYP0$0$0 == 0x008a
                    008A    850 _CP1HYP0	=	0x008a
                    008B    851 G$CP1HYP1$0$0 == 0x008b
                    008B    852 _CP1HYP1	=	0x008b
                    008C    853 G$CP1FIF$0$0 == 0x008c
                    008C    854 _CP1FIF	=	0x008c
                    008D    855 G$CP1RIF$0$0 == 0x008d
                    008D    856 _CP1RIF	=	0x008d
                    008E    857 G$CP1OUT$0$0 == 0x008e
                    008E    858 _CP1OUT	=	0x008e
                    008F    859 G$CP1EN$0$0 == 0x008f
                    008F    860 _CP1EN	=	0x008f
                    0088    861 G$FLHBUSY$0$0 == 0x0088
                    0088    862 _FLHBUSY	=	0x0088
                    0090    863 G$P1_0$0$0 == 0x0090
                    0090    864 _P1_0	=	0x0090
                    0091    865 G$P1_1$0$0 == 0x0091
                    0091    866 _P1_1	=	0x0091
                    0092    867 G$P1_2$0$0 == 0x0092
                    0092    868 _P1_2	=	0x0092
                    0093    869 G$P1_3$0$0 == 0x0093
                    0093    870 _P1_3	=	0x0093
                    0094    871 G$P1_4$0$0 == 0x0094
                    0094    872 _P1_4	=	0x0094
                    0095    873 G$P1_5$0$0 == 0x0095
                    0095    874 _P1_5	=	0x0095
                    0096    875 G$P1_6$0$0 == 0x0096
                    0096    876 _P1_6	=	0x0096
                    0097    877 G$P1_7$0$0 == 0x0097
                    0097    878 _P1_7	=	0x0097
                    0098    879 G$RI0$0$0 == 0x0098
                    0098    880 _RI0	=	0x0098
                    0098    881 G$RI$0$0 == 0x0098
                    0098    882 _RI	=	0x0098
                    0099    883 G$TI0$0$0 == 0x0099
                    0099    884 _TI0	=	0x0099
                    0099    885 G$TI$0$0 == 0x0099
                    0099    886 _TI	=	0x0099
                    009A    887 G$RB80$0$0 == 0x009a
                    009A    888 _RB80	=	0x009a
                    009B    889 G$TB80$0$0 == 0x009b
                    009B    890 _TB80	=	0x009b
                    009C    891 G$REN0$0$0 == 0x009c
                    009C    892 _REN0	=	0x009c
                    009C    893 G$REN$0$0 == 0x009c
                    009C    894 _REN	=	0x009c
                    009D    895 G$SM20$0$0 == 0x009d
                    009D    896 _SM20	=	0x009d
                    009E    897 G$SM10$0$0 == 0x009e
                    009E    898 _SM10	=	0x009e
                    009F    899 G$SM00$0$0 == 0x009f
                    009F    900 _SM00	=	0x009f
                    0098    901 G$RI1$0$0 == 0x0098
                    0098    902 _RI1	=	0x0098
                    0099    903 G$TI1$0$0 == 0x0099
                    0099    904 _TI1	=	0x0099
                    009A    905 G$RB81$0$0 == 0x009a
                    009A    906 _RB81	=	0x009a
                    009B    907 G$TB81$0$0 == 0x009b
                    009B    908 _TB81	=	0x009b
                    009C    909 G$REN1$0$0 == 0x009c
                    009C    910 _REN1	=	0x009c
                    009D    911 G$MCE1$0$0 == 0x009d
                    009D    912 _MCE1	=	0x009d
                    009F    913 G$S1MODE$0$0 == 0x009f
                    009F    914 _S1MODE	=	0x009f
                    00A0    915 G$P2_0$0$0 == 0x00a0
                    00A0    916 _P2_0	=	0x00a0
                    00A1    917 G$P2_1$0$0 == 0x00a1
                    00A1    918 _P2_1	=	0x00a1
                    00A2    919 G$P2_2$0$0 == 0x00a2
                    00A2    920 _P2_2	=	0x00a2
                    00A3    921 G$P2_3$0$0 == 0x00a3
                    00A3    922 _P2_3	=	0x00a3
                    00A4    923 G$P2_4$0$0 == 0x00a4
                    00A4    924 _P2_4	=	0x00a4
                    00A5    925 G$P2_5$0$0 == 0x00a5
                    00A5    926 _P2_5	=	0x00a5
                    00A6    927 G$P2_6$0$0 == 0x00a6
                    00A6    928 _P2_6	=	0x00a6
                    00A7    929 G$P2_7$0$0 == 0x00a7
                    00A7    930 _P2_7	=	0x00a7
                    00A8    931 G$EX0$0$0 == 0x00a8
                    00A8    932 _EX0	=	0x00a8
                    00A9    933 G$ET0$0$0 == 0x00a9
                    00A9    934 _ET0	=	0x00a9
                    00AA    935 G$EX1$0$0 == 0x00aa
                    00AA    936 _EX1	=	0x00aa
                    00AB    937 G$ET1$0$0 == 0x00ab
                    00AB    938 _ET1	=	0x00ab
                    00AC    939 G$ES0$0$0 == 0x00ac
                    00AC    940 _ES0	=	0x00ac
                    00AC    941 G$ES$0$0 == 0x00ac
                    00AC    942 _ES	=	0x00ac
                    00AD    943 G$ET2$0$0 == 0x00ad
                    00AD    944 _ET2	=	0x00ad
                    00AF    945 G$EA$0$0 == 0x00af
                    00AF    946 _EA	=	0x00af
                    00B0    947 G$P3_0$0$0 == 0x00b0
                    00B0    948 _P3_0	=	0x00b0
                    00B1    949 G$P3_1$0$0 == 0x00b1
                    00B1    950 _P3_1	=	0x00b1
                    00B2    951 G$P3_2$0$0 == 0x00b2
                    00B2    952 _P3_2	=	0x00b2
                    00B3    953 G$P3_3$0$0 == 0x00b3
                    00B3    954 _P3_3	=	0x00b3
                    00B4    955 G$P3_4$0$0 == 0x00b4
                    00B4    956 _P3_4	=	0x00b4
                    00B5    957 G$P3_5$0$0 == 0x00b5
                    00B5    958 _P3_5	=	0x00b5
                    00B6    959 G$P3_6$0$0 == 0x00b6
                    00B6    960 _P3_6	=	0x00b6
                    00B7    961 G$P3_7$0$0 == 0x00b7
                    00B7    962 _P3_7	=	0x00b7
                    00B8    963 G$PX0$0$0 == 0x00b8
                    00B8    964 _PX0	=	0x00b8
                    00B9    965 G$PT0$0$0 == 0x00b9
                    00B9    966 _PT0	=	0x00b9
                    00BA    967 G$PX1$0$0 == 0x00ba
                    00BA    968 _PX1	=	0x00ba
                    00BB    969 G$PT1$0$0 == 0x00bb
                    00BB    970 _PT1	=	0x00bb
                    00BC    971 G$PS0$0$0 == 0x00bc
                    00BC    972 _PS0	=	0x00bc
                    00BC    973 G$PS$0$0 == 0x00bc
                    00BC    974 _PS	=	0x00bc
                    00BD    975 G$PT2$0$0 == 0x00bd
                    00BD    976 _PT2	=	0x00bd
                    00C0    977 G$SMBTOE$0$0 == 0x00c0
                    00C0    978 _SMBTOE	=	0x00c0
                    00C1    979 G$SMBFTE$0$0 == 0x00c1
                    00C1    980 _SMBFTE	=	0x00c1
                    00C2    981 G$AA$0$0 == 0x00c2
                    00C2    982 _AA	=	0x00c2
                    00C3    983 G$SI$0$0 == 0x00c3
                    00C3    984 _SI	=	0x00c3
                    00C4    985 G$STO$0$0 == 0x00c4
                    00C4    986 _STO	=	0x00c4
                    00C5    987 G$STA$0$0 == 0x00c5
                    00C5    988 _STA	=	0x00c5
                    00C6    989 G$ENSMB$0$0 == 0x00c6
                    00C6    990 _ENSMB	=	0x00c6
                    00C7    991 G$BUSY$0$0 == 0x00c7
                    00C7    992 _BUSY	=	0x00c7
                    00C0    993 G$MAC0N$0$0 == 0x00c0
                    00C0    994 _MAC0N	=	0x00c0
                    00C1    995 G$MAC0SO$0$0 == 0x00c1
                    00C1    996 _MAC0SO	=	0x00c1
                    00C2    997 G$MAC0Z$0$0 == 0x00c2
                    00C2    998 _MAC0Z	=	0x00c2
                    00C3    999 G$MAC0HO$0$0 == 0x00c3
                    00C3   1000 _MAC0HO	=	0x00c3
                    00C8   1001 G$CPRL2$0$0 == 0x00c8
                    00C8   1002 _CPRL2	=	0x00c8
                    00C9   1003 G$CT2$0$0 == 0x00c9
                    00C9   1004 _CT2	=	0x00c9
                    00CA   1005 G$TR2$0$0 == 0x00ca
                    00CA   1006 _TR2	=	0x00ca
                    00CB   1007 G$EXEN2$0$0 == 0x00cb
                    00CB   1008 _EXEN2	=	0x00cb
                    00CE   1009 G$EXF2$0$0 == 0x00ce
                    00CE   1010 _EXF2	=	0x00ce
                    00CF   1011 G$TF2$0$0 == 0x00cf
                    00CF   1012 _TF2	=	0x00cf
                    00C8   1013 G$CPRL3$0$0 == 0x00c8
                    00C8   1014 _CPRL3	=	0x00c8
                    00C9   1015 G$CT3$0$0 == 0x00c9
                    00C9   1016 _CT3	=	0x00c9
                    00CA   1017 G$TR3$0$0 == 0x00ca
                    00CA   1018 _TR3	=	0x00ca
                    00CB   1019 G$EXEN3$0$0 == 0x00cb
                    00CB   1020 _EXEN3	=	0x00cb
                    00CE   1021 G$EXF3$0$0 == 0x00ce
                    00CE   1022 _EXF3	=	0x00ce
                    00CF   1023 G$TF3$0$0 == 0x00cf
                    00CF   1024 _TF3	=	0x00cf
                    00C8   1025 G$CPRL4$0$0 == 0x00c8
                    00C8   1026 _CPRL4	=	0x00c8
                    00C9   1027 G$CT4$0$0 == 0x00c9
                    00C9   1028 _CT4	=	0x00c9
                    00CA   1029 G$TR4$0$0 == 0x00ca
                    00CA   1030 _TR4	=	0x00ca
                    00CB   1031 G$EXEN4$0$0 == 0x00cb
                    00CB   1032 _EXEN4	=	0x00cb
                    00CE   1033 G$EXF4$0$0 == 0x00ce
                    00CE   1034 _EXF4	=	0x00ce
                    00CF   1035 G$TF4$0$0 == 0x00cf
                    00CF   1036 _TF4	=	0x00cf
                    00C8   1037 G$P4_0$0$0 == 0x00c8
                    00C8   1038 _P4_0	=	0x00c8
                    00C9   1039 G$P4_1$0$0 == 0x00c9
                    00C9   1040 _P4_1	=	0x00c9
                    00CA   1041 G$P4_2$0$0 == 0x00ca
                    00CA   1042 _P4_2	=	0x00ca
                    00CB   1043 G$P4_3$0$0 == 0x00cb
                    00CB   1044 _P4_3	=	0x00cb
                    00CC   1045 G$P4_4$0$0 == 0x00cc
                    00CC   1046 _P4_4	=	0x00cc
                    00CD   1047 G$P4_5$0$0 == 0x00cd
                    00CD   1048 _P4_5	=	0x00cd
                    00CE   1049 G$P4_6$0$0 == 0x00ce
                    00CE   1050 _P4_6	=	0x00ce
                    00CF   1051 G$P4_7$0$0 == 0x00cf
                    00CF   1052 _P4_7	=	0x00cf
                    00D0   1053 G$P$0$0 == 0x00d0
                    00D0   1054 _P	=	0x00d0
                    00D1   1055 G$F1$0$0 == 0x00d1
                    00D1   1056 _F1	=	0x00d1
                    00D2   1057 G$OV$0$0 == 0x00d2
                    00D2   1058 _OV	=	0x00d2
                    00D3   1059 G$RS0$0$0 == 0x00d3
                    00D3   1060 _RS0	=	0x00d3
                    00D4   1061 G$RS1$0$0 == 0x00d4
                    00D4   1062 _RS1	=	0x00d4
                    00D5   1063 G$F0$0$0 == 0x00d5
                    00D5   1064 _F0	=	0x00d5
                    00D6   1065 G$AC$0$0 == 0x00d6
                    00D6   1066 _AC	=	0x00d6
                    00D7   1067 G$CY$0$0 == 0x00d7
                    00D7   1068 _CY	=	0x00d7
                    00D8   1069 G$CCF0$0$0 == 0x00d8
                    00D8   1070 _CCF0	=	0x00d8
                    00D9   1071 G$CCF1$0$0 == 0x00d9
                    00D9   1072 _CCF1	=	0x00d9
                    00DA   1073 G$CCF2$0$0 == 0x00da
                    00DA   1074 _CCF2	=	0x00da
                    00DB   1075 G$CCF3$0$0 == 0x00db
                    00DB   1076 _CCF3	=	0x00db
                    00DC   1077 G$CCF4$0$0 == 0x00dc
                    00DC   1078 _CCF4	=	0x00dc
                    00DD   1079 G$CCF5$0$0 == 0x00dd
                    00DD   1080 _CCF5	=	0x00dd
                    00DE   1081 G$CR$0$0 == 0x00de
                    00DE   1082 _CR	=	0x00de
                    00DF   1083 G$CF$0$0 == 0x00df
                    00DF   1084 _CF	=	0x00df
                    00D8   1085 G$P5_0$0$0 == 0x00d8
                    00D8   1086 _P5_0	=	0x00d8
                    00D9   1087 G$P5_1$0$0 == 0x00d9
                    00D9   1088 _P5_1	=	0x00d9
                    00DA   1089 G$P5_2$0$0 == 0x00da
                    00DA   1090 _P5_2	=	0x00da
                    00DB   1091 G$P5_3$0$0 == 0x00db
                    00DB   1092 _P5_3	=	0x00db
                    00DC   1093 G$P5_4$0$0 == 0x00dc
                    00DC   1094 _P5_4	=	0x00dc
                    00DD   1095 G$P5_5$0$0 == 0x00dd
                    00DD   1096 _P5_5	=	0x00dd
                    00DE   1097 G$P5_6$0$0 == 0x00de
                    00DE   1098 _P5_6	=	0x00de
                    00DF   1099 G$P5_7$0$0 == 0x00df
                    00DF   1100 _P5_7	=	0x00df
                    00E8   1101 G$AD0LJST$0$0 == 0x00e8
                    00E8   1102 _AD0LJST	=	0x00e8
                    00E9   1103 G$AD0WINT$0$0 == 0x00e9
                    00E9   1104 _AD0WINT	=	0x00e9
                    00EA   1105 G$AD0CM0$0$0 == 0x00ea
                    00EA   1106 _AD0CM0	=	0x00ea
                    00EB   1107 G$AD0CM1$0$0 == 0x00eb
                    00EB   1108 _AD0CM1	=	0x00eb
                    00EC   1109 G$AD0BUSY$0$0 == 0x00ec
                    00EC   1110 _AD0BUSY	=	0x00ec
                    00ED   1111 G$AD0INT$0$0 == 0x00ed
                    00ED   1112 _AD0INT	=	0x00ed
                    00EE   1113 G$AD0TM$0$0 == 0x00ee
                    00EE   1114 _AD0TM	=	0x00ee
                    00EF   1115 G$AD0EN$0$0 == 0x00ef
                    00EF   1116 _AD0EN	=	0x00ef
                    00E8   1117 G$AD2WINT$0$0 == 0x00e8
                    00E8   1118 _AD2WINT	=	0x00e8
                    00E9   1119 G$AD2CM0$0$0 == 0x00e9
                    00E9   1120 _AD2CM0	=	0x00e9
                    00EA   1121 G$AD2CM1$0$0 == 0x00ea
                    00EA   1122 _AD2CM1	=	0x00ea
                    00EB   1123 G$AD2CM2$0$0 == 0x00eb
                    00EB   1124 _AD2CM2	=	0x00eb
                    00EC   1125 G$AD2BUSY$0$0 == 0x00ec
                    00EC   1126 _AD2BUSY	=	0x00ec
                    00ED   1127 G$AD2INT$0$0 == 0x00ed
                    00ED   1128 _AD2INT	=	0x00ed
                    00EE   1129 G$AD2TM$0$0 == 0x00ee
                    00EE   1130 _AD2TM	=	0x00ee
                    00EF   1131 G$AD2EN$0$0 == 0x00ef
                    00EF   1132 _AD2EN	=	0x00ef
                    00E8   1133 G$P6_0$0$0 == 0x00e8
                    00E8   1134 _P6_0	=	0x00e8
                    00E9   1135 G$P6_1$0$0 == 0x00e9
                    00E9   1136 _P6_1	=	0x00e9
                    00EA   1137 G$P6_2$0$0 == 0x00ea
                    00EA   1138 _P6_2	=	0x00ea
                    00EB   1139 G$P6_3$0$0 == 0x00eb
                    00EB   1140 _P6_3	=	0x00eb
                    00EC   1141 G$P6_4$0$0 == 0x00ec
                    00EC   1142 _P6_4	=	0x00ec
                    00ED   1143 G$P6_5$0$0 == 0x00ed
                    00ED   1144 _P6_5	=	0x00ed
                    00EE   1145 G$P6_6$0$0 == 0x00ee
                    00EE   1146 _P6_6	=	0x00ee
                    00EF   1147 G$P6_7$0$0 == 0x00ef
                    00EF   1148 _P6_7	=	0x00ef
                    00F8   1149 G$SPIEN$0$0 == 0x00f8
                    00F8   1150 _SPIEN	=	0x00f8
                    00F9   1151 G$TXBMT$0$0 == 0x00f9
                    00F9   1152 _TXBMT	=	0x00f9
                    00FA   1153 G$NSSMD0$0$0 == 0x00fa
                    00FA   1154 _NSSMD0	=	0x00fa
                    00FB   1155 G$NSSMD1$0$0 == 0x00fb
                    00FB   1156 _NSSMD1	=	0x00fb
                    00FC   1157 G$RXOVRN$0$0 == 0x00fc
                    00FC   1158 _RXOVRN	=	0x00fc
                    00FD   1159 G$MODF$0$0 == 0x00fd
                    00FD   1160 _MODF	=	0x00fd
                    00FE   1161 G$WCOL$0$0 == 0x00fe
                    00FE   1162 _WCOL	=	0x00fe
                    00FF   1163 G$SPIF$0$0 == 0x00ff
                    00FF   1164 _SPIF	=	0x00ff
                    00F8   1165 G$P7_0$0$0 == 0x00f8
                    00F8   1166 _P7_0	=	0x00f8
                    00F9   1167 G$P7_1$0$0 == 0x00f9
                    00F9   1168 _P7_1	=	0x00f9
                    00FA   1169 G$P7_2$0$0 == 0x00fa
                    00FA   1170 _P7_2	=	0x00fa
                    00FB   1171 G$P7_3$0$0 == 0x00fb
                    00FB   1172 _P7_3	=	0x00fb
                    00FC   1173 G$P7_4$0$0 == 0x00fc
                    00FC   1174 _P7_4	=	0x00fc
                    00FD   1175 G$P7_5$0$0 == 0x00fd
                    00FD   1176 _P7_5	=	0x00fd
                    00FE   1177 G$P7_6$0$0 == 0x00fe
                    00FE   1178 _P7_6	=	0x00fe
                    00FF   1179 G$P7_7$0$0 == 0x00ff
                    00FF   1180 _P7_7	=	0x00ff
                           1181 ;--------------------------------------------------------
                           1182 ; overlayable register banks
                           1183 ;--------------------------------------------------------
                           1184 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                    1185 	.ds 8
                           1186 ;--------------------------------------------------------
                           1187 ; internal ram data
                           1188 ;--------------------------------------------------------
                           1189 	.area DSEG    (DATA)
                    0000   1190 G$overflows$0$0==.
   0000                    1191 _overflows::
   0000                    1192 	.ds 2
                           1193 ;--------------------------------------------------------
                           1194 ; overlayable items in internal ram 
                           1195 ;--------------------------------------------------------
                           1196 	.area	OSEG    (OVR,DATA)
                           1197 	.area	OSEG    (OVR,DATA)
                           1198 	.area	OSEG    (OVR,DATA)
                           1199 	.area	OSEG    (OVR,DATA)
                           1200 	.area	OSEG    (OVR,DATA)
                           1201 	.area	OSEG    (OVR,DATA)
                           1202 	.area	OSEG    (OVR,DATA)
                           1203 ;--------------------------------------------------------
                           1204 ; Stack segment in internal ram 
                           1205 ;--------------------------------------------------------
                           1206 	.area	SSEG	(DATA)
   0000                    1207 __start__stack:
   0000                    1208 	.ds	1
                           1209 
                           1210 ;--------------------------------------------------------
                           1211 ; indirectly addressable internal ram data
                           1212 ;--------------------------------------------------------
                           1213 	.area ISEG    (DATA)
                           1214 ;--------------------------------------------------------
                           1215 ; absolute internal ram data
                           1216 ;--------------------------------------------------------
                           1217 	.area IABS    (ABS,DATA)
                           1218 	.area IABS    (ABS,DATA)
                           1219 ;--------------------------------------------------------
                           1220 ; bit data
                           1221 ;--------------------------------------------------------
                           1222 	.area BSEG    (BIT)
                           1223 ;--------------------------------------------------------
                           1224 ; paged external ram data
                           1225 ;--------------------------------------------------------
                           1226 	.area PSEG    (PAG,XDATA)
                           1227 ;--------------------------------------------------------
                           1228 ; external ram data
                           1229 ;--------------------------------------------------------
                           1230 	.area XSEG    (XDATA)
                           1231 ;--------------------------------------------------------
                           1232 ; absolute external ram data
                           1233 ;--------------------------------------------------------
                           1234 	.area XABS    (ABS,XDATA)
                           1235 ;--------------------------------------------------------
                           1236 ; external initialized ram data
                           1237 ;--------------------------------------------------------
                           1238 	.area XISEG   (XDATA)
                           1239 	.area HOME    (CODE)
                           1240 	.area GSINIT0 (CODE)
                           1241 	.area GSINIT1 (CODE)
                           1242 	.area GSINIT2 (CODE)
                           1243 	.area GSINIT3 (CODE)
                           1244 	.area GSINIT4 (CODE)
                           1245 	.area GSINIT5 (CODE)
                           1246 	.area GSINIT  (CODE)
                           1247 	.area GSFINAL (CODE)
                           1248 	.area CSEG    (CODE)
                           1249 ;--------------------------------------------------------
                           1250 ; interrupt vector 
                           1251 ;--------------------------------------------------------
                           1252 	.area HOME    (CODE)
   0000                    1253 __interrupt_vect:
   0000 02s00r00           1254 	ljmp	__sdcc_gsinit_startup
   0003 32                 1255 	reti
   0004                    1256 	.ds	7
   000B 32                 1257 	reti
   000C                    1258 	.ds	7
   0013 32                 1259 	reti
   0014                    1260 	.ds	7
   001B 02s01rA7           1261 	ljmp	_Timer1_ISR
   001E                    1262 	.ds	5
   0023 32                 1263 	reti
   0024                    1264 	.ds	7
   002B 02s01rA8           1265 	ljmp	_Timer2_ISR
                           1266 ;--------------------------------------------------------
                           1267 ; global & static initialisations
                           1268 ;--------------------------------------------------------
                           1269 	.area HOME    (CODE)
                           1270 	.area GSINIT  (CODE)
                           1271 	.area GSFINAL (CODE)
                           1272 	.area GSINIT  (CODE)
                           1273 	.globl __sdcc_gsinit_startup
                           1274 	.globl __sdcc_program_startup
                           1275 	.globl __start__stack
                           1276 	.globl __mcs51_genXINIT
                           1277 	.globl __mcs51_genXRAMCLEAR
                           1278 	.globl __mcs51_genRAMCLEAR
                    0000   1279 	G$Timer2_ISR$0$0 ==.
                    0000   1280 	C$lab3_1.c$32$1$1 ==.
                           1281 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:32: int overflows = 0;
   0000 E4                 1282 	clr	a
   0001 F5*00              1283 	mov	_overflows,a
   0003 F5*01              1284 	mov	(_overflows + 1),a
                           1285 	.area GSFINAL (CODE)
   0000 02s00r2E           1286 	ljmp	__sdcc_program_startup
                           1287 ;--------------------------------------------------------
                           1288 ; Home
                           1289 ;--------------------------------------------------------
                           1290 	.area HOME    (CODE)
                           1291 	.area HOME    (CODE)
   002E                    1292 __sdcc_program_startup:
   002E 12s00r13           1293 	lcall	_main
                           1294 ;	return from main will lock up
   0031 80 FE              1295 	sjmp .
                           1296 ;--------------------------------------------------------
                           1297 ; code
                           1298 ;--------------------------------------------------------
                           1299 	.area CSEG    (CODE)
                           1300 ;------------------------------------------------------------
                           1301 ;Allocation info for local variables in function 'putchar'
                           1302 ;------------------------------------------------------------
                           1303 ;c                         Allocated to registers r2 
                           1304 ;------------------------------------------------------------
                    0000   1305 	G$putchar$0$0 ==.
                    0000   1306 	C$putget.h$18$0$0 ==.
                           1307 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\/putget.h:18: void putchar(char c)
                           1308 ;	-----------------------------------------
                           1309 ;	 function putchar
                           1310 ;	-----------------------------------------
   0000                    1311 _putchar:
                    0002   1312 	ar2 = 0x02
                    0003   1313 	ar3 = 0x03
                    0004   1314 	ar4 = 0x04
                    0005   1315 	ar5 = 0x05
                    0006   1316 	ar6 = 0x06
                    0007   1317 	ar7 = 0x07
                    0000   1318 	ar0 = 0x00
                    0001   1319 	ar1 = 0x01
   0000 AA 82              1320 	mov	r2,dpl
                    0002   1321 	C$putget.h$20$1$1 ==.
                           1322 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\/putget.h:20: while(!TI0); 
   0002                    1323 00101$:
                    0002   1324 	C$putget.h$21$1$1 ==.
                           1325 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\/putget.h:21: TI0=0;
   0002 10 99 02           1326 	jbc	_TI0,00108$
   0005 80 FB              1327 	sjmp	00101$
   0007                    1328 00108$:
                    0007   1329 	C$putget.h$22$1$1 ==.
                           1330 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\/putget.h:22: SBUF0 = c;
   0007 8A 99              1331 	mov	_SBUF0,r2
                    0009   1332 	C$putget.h$23$1$1 ==.
                    0009   1333 	XG$putchar$0$0 ==.
   0009 22                 1334 	ret
                           1335 ;------------------------------------------------------------
                           1336 ;Allocation info for local variables in function 'getchar'
                           1337 ;------------------------------------------------------------
                           1338 ;c                         Allocated to registers 
                           1339 ;------------------------------------------------------------
                    000A   1340 	G$getchar$0$0 ==.
                    000A   1341 	C$putget.h$28$1$1 ==.
                           1342 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\/putget.h:28: char getchar(void)
                           1343 ;	-----------------------------------------
                           1344 ;	 function getchar
                           1345 ;	-----------------------------------------
   000A                    1346 _getchar:
                    000A   1347 	C$putget.h$31$1$1 ==.
                           1348 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\/putget.h:31: while(!RI0);
   000A                    1349 00101$:
                    000A   1350 	C$putget.h$32$1$1 ==.
                           1351 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\/putget.h:32: RI0 =0;
   000A 10 98 02           1352 	jbc	_RI0,00108$
   000D 80 FB              1353 	sjmp	00101$
   000F                    1354 00108$:
                    000F   1355 	C$putget.h$33$1$1 ==.
                           1356 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\/putget.h:33: c = SBUF0;
   000F 85 99 82           1357 	mov	dpl,_SBUF0
                    0012   1358 	C$putget.h$35$1$1 ==.
                           1359 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\/putget.h:35: return c;
                    0012   1360 	C$putget.h$36$1$1 ==.
                    0012   1361 	XG$getchar$0$0 ==.
   0012 22                 1362 	ret
                           1363 ;------------------------------------------------------------
                           1364 ;Allocation info for local variables in function 'main'
                           1365 ;------------------------------------------------------------
                           1366 ;charmander                Allocated to registers r2 
                           1367 ;------------------------------------------------------------
                    0013   1368 	G$main$0$0 ==.
                    0013   1369 	C$lab3_1.c$37$1$1 ==.
                           1370 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:37: void main(void)
                           1371 ;	-----------------------------------------
                           1372 ;	 function main
                           1373 ;	-----------------------------------------
   0013                    1374 _main:
                    0013   1375 	C$lab3_1.c$41$1$1 ==.
                           1376 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:41: WDTCN = 0xDE;						// Disable the watchdog timer
   0013 75 FF DE           1377 	mov	_WDTCN,#0xDE
                    0016   1378 	C$lab3_1.c$42$1$1 ==.
                           1379 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:42: WDTCN = 0xAD;						// Note: = "DEAD"!
   0016 75 FF AD           1380 	mov	_WDTCN,#0xAD
                    0019   1381 	C$lab3_1.c$44$1$1 ==.
                           1382 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:44: SYSCLK_INIT();						// Initialize the oscillator
   0019 12s01r13           1383 	lcall	_SYSCLK_INIT
                    001C   1384 	C$lab3_1.c$45$1$1 ==.
                           1385 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:45: Timer_Init();						// Initialize timer
   001C 12s01r7D           1386 	lcall	_Timer_Init
                    001F   1387 	C$lab3_1.c$46$1$1 ==.
                           1388 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:46: UART_INIT();						// Initialize UARTs
   001F 12s01r50           1389 	lcall	_UART_INIT
                    0022   1390 	C$lab3_1.c$47$1$1 ==.
                           1391 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:47: PORT_INIT();						// Initialize the Crossbar and GPIO
   0022 12s01r36           1392 	lcall	_PORT_INIT
                    0025   1393 	C$lab3_1.c$50$1$1 ==.
                           1394 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:50: SFRPAGE = UART0_PAGE;				// Direct output to UART0
   0025 75 84 00           1395 	mov	_SFRPAGE,#0x00
                    0028   1396 	C$lab3_1.c$52$1$1 ==.
                           1397 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:52: printf("\033[2J");
   0028 74r00              1398 	mov	a,#__str_0
   002A C0 E0              1399 	push	acc
   002C 74s00              1400 	mov	a,#(__str_0 >> 8)
   002E C0 E0              1401 	push	acc
   0030 74 80              1402 	mov	a,#0x80
   0032 C0 E0              1403 	push	acc
   0034 12s00r00           1404 	lcall	_printf
   0037 15 81              1405 	dec	sp
   0039 15 81              1406 	dec	sp
   003B 15 81              1407 	dec	sp
                    003D   1408 	C$lab3_1.c$53$1$1 ==.
                           1409 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:53: printf("I am UART0 :D\n\n\r");
   003D 74r05              1410 	mov	a,#__str_1
   003F C0 E0              1411 	push	acc
   0041 74s00              1412 	mov	a,#(__str_1 >> 8)
   0043 C0 E0              1413 	push	acc
   0045 74 80              1414 	mov	a,#0x80
   0047 C0 E0              1415 	push	acc
   0049 12s00r00           1416 	lcall	_printf
   004C 15 81              1417 	dec	sp
   004E 15 81              1418 	dec	sp
   0050 15 81              1419 	dec	sp
                    0052   1420 	C$lab3_1.c$56$1$1 ==.
                           1421 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:56: SFRPAGE = UART1_PAGE;				// Direct output to UART1
   0052 75 84 01           1422 	mov	_SFRPAGE,#0x01
                    0055   1423 	C$lab3_1.c$58$1$1 ==.
                           1424 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:58: printf("\033[2J");
   0055 74r00              1425 	mov	a,#__str_0
   0057 C0 E0              1426 	push	acc
   0059 74s00              1427 	mov	a,#(__str_0 >> 8)
   005B C0 E0              1428 	push	acc
   005D 74 80              1429 	mov	a,#0x80
   005F C0 E0              1430 	push	acc
   0061 12s00r00           1431 	lcall	_printf
   0064 15 81              1432 	dec	sp
   0066 15 81              1433 	dec	sp
   0068 15 81              1434 	dec	sp
                    006A   1435 	C$lab3_1.c$59$1$1 ==.
                           1436 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:59: printf("I am UART1.\n\n\r");
   006A 74r16              1437 	mov	a,#__str_2
   006C C0 E0              1438 	push	acc
   006E 74s00              1439 	mov	a,#(__str_2 >> 8)
   0070 C0 E0              1440 	push	acc
   0072 74 80              1441 	mov	a,#0x80
   0074 C0 E0              1442 	push	acc
   0076 12s00r00           1443 	lcall	_printf
   0079 15 81              1444 	dec	sp
   007B 15 81              1445 	dec	sp
   007D 15 81              1446 	dec	sp
                    007F   1447 	C$lab3_1.c$61$1$1 ==.
                           1448 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:61: SFRPAGE = UART0_PAGE;
   007F 75 84 00           1449 	mov	_SFRPAGE,#0x00
                    0082   1450 	C$lab3_1.c$62$1$1 ==.
                           1451 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:62: while(1)
   0082                    1452 00106$:
                    0082   1453 	C$lab3_1.c$64$2$2 ==.
                           1454 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:64: SFRPAGE = UART0_PAGE;				// Direct output to UART0
   0082 75 84 00           1455 	mov	_SFRPAGE,#0x00
                    0085   1456 	C$lab3_1.c$66$2$2 ==.
                           1457 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:66: if (RI0 == 1)
   0085 30 98 41           1458 	jnb	_RI0,00102$
                    0088   1459 	C$lab3_1.c$68$3$3 ==.
                           1460 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:68: charmander = SBUF0;
                    0088   1461 	C$lab3_1.c$69$3$3 ==.
                           1462 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:69: printf("%c", charmander);
   0088 E5 99              1463 	mov	a,_SBUF0
   008A FB                 1464 	mov	r3,a
   008B 33                 1465 	rlc	a
   008C 95 E0              1466 	subb	a,acc
   008E FC                 1467 	mov	r4,a
   008F C0 03              1468 	push	ar3
   0091 C0 04              1469 	push	ar4
   0093 C0 03              1470 	push	ar3
   0095 C0 04              1471 	push	ar4
   0097 74r25              1472 	mov	a,#__str_3
   0099 C0 E0              1473 	push	acc
   009B 74s00              1474 	mov	a,#(__str_3 >> 8)
   009D C0 E0              1475 	push	acc
   009F 74 80              1476 	mov	a,#0x80
   00A1 C0 E0              1477 	push	acc
   00A3 12s00r00           1478 	lcall	_printf
   00A6 E5 81              1479 	mov	a,sp
   00A8 24 FB              1480 	add	a,#0xfb
   00AA F5 81              1481 	mov	sp,a
                    00AC   1482 	C$lab3_1.c$70$3$3 ==.
                           1483 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:70: SFRPAGE = UART1_PAGE;
   00AC 75 84 01           1484 	mov	_SFRPAGE,#0x01
                    00AF   1485 	C$lab3_1.c$71$3$3 ==.
                           1486 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:71: printf("%c", charmander);
   00AF 74r25              1487 	mov	a,#__str_3
   00B1 C0 E0              1488 	push	acc
   00B3 74s00              1489 	mov	a,#(__str_3 >> 8)
   00B5 C0 E0              1490 	push	acc
   00B7 74 80              1491 	mov	a,#0x80
   00B9 C0 E0              1492 	push	acc
   00BB 12s00r00           1493 	lcall	_printf
   00BE E5 81              1494 	mov	a,sp
   00C0 24 FB              1495 	add	a,#0xfb
   00C2 F5 81              1496 	mov	sp,a
                    00C4   1497 	C$lab3_1.c$72$3$3 ==.
                           1498 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:72: SFRPAGE = UART0_PAGE;
   00C4 75 84 00           1499 	mov	_SFRPAGE,#0x00
                    00C7   1500 	C$lab3_1.c$73$3$3 ==.
                           1501 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:73: RI0 = 0;
   00C7 C2 98              1502 	clr	_RI0
   00C9                    1503 00102$:
                    00C9   1504 	C$lab3_1.c$76$2$2 ==.
                           1505 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:76: SFRPAGE = UART1_PAGE;				// Direct output to UART1
   00C9 75 84 01           1506 	mov	_SFRPAGE,#0x01
                    00CC   1507 	C$lab3_1.c$79$1$2 ==.
                           1508 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:79: if (RI1 == 1)
   00CC 30 98 B3           1509 	jnb	_RI1,00106$
                    00CF   1510 	C$lab3_1.c$81$3$4 ==.
                           1511 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:81: charmander = SBUF1;
                    00CF   1512 	C$lab3_1.c$82$3$4 ==.
                           1513 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:82: printf("%c", charmander);
   00CF E5 99              1514 	mov	a,_SBUF1
   00D1 FA                 1515 	mov	r2,a
   00D2 33                 1516 	rlc	a
   00D3 95 E0              1517 	subb	a,acc
   00D5 FB                 1518 	mov	r3,a
   00D6 C0 02              1519 	push	ar2
   00D8 C0 03              1520 	push	ar3
   00DA C0 02              1521 	push	ar2
   00DC C0 03              1522 	push	ar3
   00DE 74r25              1523 	mov	a,#__str_3
   00E0 C0 E0              1524 	push	acc
   00E2 74s00              1525 	mov	a,#(__str_3 >> 8)
   00E4 C0 E0              1526 	push	acc
   00E6 74 80              1527 	mov	a,#0x80
   00E8 C0 E0              1528 	push	acc
   00EA 12s00r00           1529 	lcall	_printf
   00ED E5 81              1530 	mov	a,sp
   00EF 24 FB              1531 	add	a,#0xfb
   00F1 F5 81              1532 	mov	sp,a
                    00F3   1533 	C$lab3_1.c$83$3$4 ==.
                           1534 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:83: SFRPAGE = UART0_PAGE;
   00F3 75 84 00           1535 	mov	_SFRPAGE,#0x00
                    00F6   1536 	C$lab3_1.c$84$3$4 ==.
                           1537 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:84: printf("%c", charmander);
   00F6 74r25              1538 	mov	a,#__str_3
   00F8 C0 E0              1539 	push	acc
   00FA 74s00              1540 	mov	a,#(__str_3 >> 8)
   00FC C0 E0              1541 	push	acc
   00FE 74 80              1542 	mov	a,#0x80
   0100 C0 E0              1543 	push	acc
   0102 12s00r00           1544 	lcall	_printf
   0105 E5 81              1545 	mov	a,sp
   0107 24 FB              1546 	add	a,#0xfb
   0109 F5 81              1547 	mov	sp,a
                    010B   1548 	C$lab3_1.c$85$3$4 ==.
                           1549 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:85: SFRPAGE = UART1_PAGE;
   010B 75 84 01           1550 	mov	_SFRPAGE,#0x01
                    010E   1551 	C$lab3_1.c$86$3$4 ==.
                           1552 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:86: RI1 = 0;
   010E C2 98              1553 	clr	_RI1
                    0110   1554 	C$lab3_1.c$90$1$1 ==.
                    0110   1555 	XG$main$0$0 ==.
   0110 02s00r82           1556 	ljmp	00106$
                           1557 ;------------------------------------------------------------
                           1558 ;Allocation info for local variables in function 'SYSCLK_INIT'
                           1559 ;------------------------------------------------------------
                           1560 ;i                         Allocated to registers r3 r4 
                           1561 ;SFRPAGE_SAVE              Allocated to registers r2 
                           1562 ;------------------------------------------------------------
                    0113   1563 	G$SYSCLK_INIT$0$0 ==.
                    0113   1564 	C$lab3_1.c$98$1$1 ==.
                           1565 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:98: void SYSCLK_INIT(void)
                           1566 ;	-----------------------------------------
                           1567 ;	 function SYSCLK_INIT
                           1568 ;	-----------------------------------------
   0113                    1569 _SYSCLK_INIT:
                    0113   1570 	C$lab3_1.c$103$1$1 ==.
                           1571 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:103: SFRPAGE_SAVE = SFRPAGE;				// Save Current SFR page	SFRPAGE = CONFIG_PAGE;
   0113 AA 84              1572 	mov	r2,_SFRPAGE
                    0115   1573 	C$lab3_1.c$104$1$1 ==.
                           1574 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:104: SFRPAGE   = CONFIG_PAGE;
   0115 75 84 0F           1575 	mov	_SFRPAGE,#0x0F
                    0118   1576 	C$lab3_1.c$106$1$1 ==.
                           1577 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:106: OSCXCN = 0x67;						// Start ext osc with 22.1184MHz crystal
   0118 75 8C 67           1578 	mov	_OSCXCN,#0x67
                    011B   1579 	C$lab3_1.c$107$1$1 ==.
                           1580 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:107: for(i=0; i < 3000; i++);			// Wait for the oscillator to start up
   011B 7B B8              1581 	mov	r3,#0xB8
   011D 7C 0B              1582 	mov	r4,#0x0B
   011F                    1583 00106$:
   011F 1B                 1584 	dec	r3
   0120 BB FF 01           1585 	cjne	r3,#0xff,00114$
   0123 1C                 1586 	dec	r4
   0124                    1587 00114$:
   0124 EB                 1588 	mov	a,r3
   0125 4C                 1589 	orl	a,r4
   0126 70 F7              1590 	jnz	00106$
                    0128   1591 	C$lab3_1.c$108$1$1 ==.
                           1592 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:108: while(!(OSCXCN & 0x80));
   0128                    1593 00101$:
   0128 E5 8C              1594 	mov	a,_OSCXCN
   012A 30 E7 FB           1595 	jnb	acc.7,00101$
                    012D   1596 	C$lab3_1.c$109$1$1 ==.
                           1597 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:109: CLKSEL = 0x01;						// Switch to the external crystal oscillator
   012D 75 97 01           1598 	mov	_CLKSEL,#0x01
                    0130   1599 	C$lab3_1.c$110$1$1 ==.
                           1600 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:110: OSCICN = 0x00;						// Disable the internal oscillator
   0130 75 8A 00           1601 	mov	_OSCICN,#0x00
                    0133   1602 	C$lab3_1.c$112$1$1 ==.
                           1603 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:112: SFRPAGE = SFRPAGE_SAVE;             // Restore SFR page
   0133 8A 84              1604 	mov	_SFRPAGE,r2
                    0135   1605 	C$lab3_1.c$113$1$1 ==.
                    0135   1606 	XG$SYSCLK_INIT$0$0 ==.
   0135 22                 1607 	ret
                           1608 ;------------------------------------------------------------
                           1609 ;Allocation info for local variables in function 'PORT_INIT'
                           1610 ;------------------------------------------------------------
                           1611 ;SFRPAGE_SAVE              Allocated to registers r2 
                           1612 ;------------------------------------------------------------
                    0136   1613 	G$PORT_INIT$0$0 ==.
                    0136   1614 	C$lab3_1.c$121$1$1 ==.
                           1615 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:121: void PORT_INIT(void)
                           1616 ;	-----------------------------------------
                           1617 ;	 function PORT_INIT
                           1618 ;	-----------------------------------------
   0136                    1619 _PORT_INIT:
                    0136   1620 	C$lab3_1.c$123$1$1 ==.
                           1621 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:123: char SFRPAGE_SAVE = SFRPAGE;    // Save Current SFR page.
   0136 AA 84              1622 	mov	r2,_SFRPAGE
                    0138   1623 	C$lab3_1.c$125$1$1 ==.
                           1624 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:125: SFRPAGE = CONFIG_PAGE;
   0138 75 84 0F           1625 	mov	_SFRPAGE,#0x0F
                    013B   1626 	C$lab3_1.c$127$1$1 ==.
                           1627 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:127: EA=1;
   013B D2 AF              1628 	setb	_EA
                    013D   1629 	C$lab3_1.c$128$1$1 ==.
                           1630 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:128: ET2 = 1;
   013D D2 AD              1631 	setb	_ET2
                    013F   1632 	C$lab3_1.c$129$1$1 ==.
                           1633 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:129: ET1 = 1;	
   013F D2 AB              1634 	setb	_ET1
                    0141   1635 	C$lab3_1.c$134$1$1 ==.
                           1636 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:134: P0MDOUT = 0x05;			//0.0 and 0.2 are pp
   0141 75 A4 05           1637 	mov	_P0MDOUT,#0x05
                    0144   1638 	C$lab3_1.c$135$1$1 ==.
                           1639 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:135: P0 &= 0x05;			//high imped
   0144 53 80 05           1640 	anl	_P0,#0x05
                    0147   1641 	C$lab3_1.c$138$1$1 ==.
                           1642 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:138: XBR0	= 0x04;			// Enable UART0.
   0147 75 E1 04           1643 	mov	_XBR0,#0x04
                    014A   1644 	C$lab3_1.c$139$1$1 ==.
                           1645 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:139: XBR2	= 0x44;			// Enable Crossbar and weak pull-ups and uart1.
   014A 75 E3 44           1646 	mov	_XBR2,#0x44
                    014D   1647 	C$lab3_1.c$141$1$1 ==.
                           1648 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:141: SFRPAGE = SFRPAGE_SAVE;	// Restore SFR page.
   014D 8A 84              1649 	mov	_SFRPAGE,r2
                    014F   1650 	C$lab3_1.c$142$1$1 ==.
                    014F   1651 	XG$PORT_INIT$0$0 ==.
   014F 22                 1652 	ret
                           1653 ;------------------------------------------------------------
                           1654 ;Allocation info for local variables in function 'UART_INIT'
                           1655 ;------------------------------------------------------------
                           1656 ;SFRPAGE_SAVE              Allocated to registers r2 
                           1657 ;------------------------------------------------------------
                    0150   1658 	G$UART_INIT$0$0 ==.
                    0150   1659 	C$lab3_1.c$150$1$1 ==.
                           1660 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:150: void UART_INIT(void)
                           1661 ;	-----------------------------------------
                           1662 ;	 function UART_INIT
                           1663 ;	-----------------------------------------
   0150                    1664 _UART_INIT:
                    0150   1665 	C$lab3_1.c$152$1$1 ==.
                           1666 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:152: char SFRPAGE_SAVE = SFRPAGE;
   0150 AA 84              1667 	mov	r2,_SFRPAGE
                    0152   1668 	C$lab3_1.c$154$1$1 ==.
                           1669 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:154: SFRPAGE = UART0_PAGE;
   0152 75 84 00           1670 	mov	_SFRPAGE,#0x00
                    0155   1671 	C$lab3_1.c$155$1$1 ==.
                           1672 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:155: SCON0 = 0x50;
   0155 75 98 50           1673 	mov	_SCON0,#0x50
                    0158   1674 	C$lab3_1.c$156$1$1 ==.
                           1675 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:156: SSTA0 = 0x05;						//UART0 use timer2 for baudrate
   0158 75 91 05           1676 	mov	_SSTA0,#0x05
                    015B   1677 	C$lab3_1.c$157$1$1 ==.
                           1678 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:157: TI0 = 1;
   015B D2 99              1679 	setb	_TI0
                    015D   1680 	C$lab3_1.c$159$1$1 ==.
                           1681 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:159: SFRPAGE = UART1_PAGE;
   015D 75 84 01           1682 	mov	_SFRPAGE,#0x01
                    0160   1683 	C$lab3_1.c$160$1$1 ==.
                           1684 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:160: SCON1 = 0x10;
   0160 75 98 10           1685 	mov	_SCON1,#0x10
                    0163   1686 	C$lab3_1.c$161$1$1 ==.
                           1687 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:161: TI1 = 1;
   0163 D2 99              1688 	setb	_TI1
                    0165   1689 	C$lab3_1.c$163$1$1 ==.
                           1690 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:163: SFRPAGE = SFRPAGE_SAVE;             // Restore SFR page
   0165 8A 84              1691 	mov	_SFRPAGE,r2
                    0167   1692 	C$lab3_1.c$164$1$1 ==.
                    0167   1693 	XG$UART_INIT$0$0 ==.
   0167 22                 1694 	ret
                           1695 ;------------------------------------------------------------
                           1696 ;Allocation info for local variables in function 'SPI_Init'
                           1697 ;------------------------------------------------------------
                           1698 ;SFRPAGE_SAVE              Allocated to registers r2 
                           1699 ;------------------------------------------------------------
                    0168   1700 	G$SPI_Init$0$0 ==.
                    0168   1701 	C$lab3_1.c$166$1$1 ==.
                           1702 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:166: void SPI_Init(void)
                           1703 ;	-----------------------------------------
                           1704 ;	 function SPI_Init
                           1705 ;	-----------------------------------------
   0168                    1706 _SPI_Init:
                    0168   1707 	C$lab3_1.c$168$1$1 ==.
                           1708 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:168: char SFRPAGE_SAVE = SFRPAGE;
   0168 AA 84              1709 	mov	r2,_SFRPAGE
                    016A   1710 	C$lab3_1.c$170$1$1 ==.
                           1711 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:170: SFRPAGE = SPI0_PAGE;
   016A 75 84 00           1712 	mov	_SFRPAGE,#0x00
                    016D   1713 	C$lab3_1.c$171$1$1 ==.
                           1714 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:171: SPI0CN = 0x05;
   016D 75 F8 05           1715 	mov	_SPI0CN,#0x05
                    0170   1716 	C$lab3_1.c$173$1$1 ==.
                           1717 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:173: SFRPAGE = SFRPAGE_SAVE;             // Restore SFR page
   0170 8A 84              1718 	mov	_SFRPAGE,r2
                    0172   1719 	C$lab3_1.c$174$1$1 ==.
                    0172   1720 	XG$SPI_Init$0$0 ==.
   0172 22                 1721 	ret
                           1722 ;------------------------------------------------------------
                           1723 ;Allocation info for local variables in function 'Interrupts_Init'
                           1724 ;------------------------------------------------------------
                           1725 ;------------------------------------------------------------
                    0173   1726 	G$Interrupts_Init$0$0 ==.
                    0173   1727 	C$lab3_1.c$176$1$1 ==.
                           1728 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:176: void Interrupts_Init(void)
                           1729 ;	-----------------------------------------
                           1730 ;	 function Interrupts_Init
                           1731 ;	-----------------------------------------
   0173                    1732 _Interrupts_Init:
                    0173   1733 	C$lab3_1.c$178$1$1 ==.
                           1734 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:178: IE = 0xB8;
   0173 75 A8 B8           1735 	mov	_IE,#0xB8
                    0176   1736 	C$lab3_1.c$179$1$1 ==.
                           1737 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:179: EIE1 = 0x08;
   0176 75 E6 08           1738 	mov	_EIE1,#0x08
                    0179   1739 	C$lab3_1.c$180$1$1 ==.
                           1740 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:180: EIE2 = 0x40;
   0179 75 E7 40           1741 	mov	_EIE2,#0x40
                    017C   1742 	C$lab3_1.c$181$1$1 ==.
                    017C   1743 	XG$Interrupts_Init$0$0 ==.
   017C 22                 1744 	ret
                           1745 ;------------------------------------------------------------
                           1746 ;Allocation info for local variables in function 'Timer_Init'
                           1747 ;------------------------------------------------------------
                           1748 ;SFRPAGE_SAVE              Allocated to registers r2 
                           1749 ;------------------------------------------------------------
                    017D   1750 	G$Timer_Init$0$0 ==.
                    017D   1751 	C$lab3_1.c$183$1$1 ==.
                           1752 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:183: void Timer_Init(void)
                           1753 ;	-----------------------------------------
                           1754 ;	 function Timer_Init
                           1755 ;	-----------------------------------------
   017D                    1756 _Timer_Init:
                    017D   1757 	C$lab3_1.c$185$1$1 ==.
                           1758 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:185: char SFRPAGE_SAVE = SFRPAGE;
   017D AA 84              1759 	mov	r2,_SFRPAGE
                    017F   1760 	C$lab3_1.c$187$1$1 ==.
                           1761 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:187: SFRPAGE = TIMER01_PAGE;
   017F 75 84 00           1762 	mov	_SFRPAGE,#0x00
                    0182   1763 	C$lab3_1.c$188$1$1 ==.
                           1764 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:188: TCON	 = 0x40;				// enable timer1
   0182 75 88 40           1765 	mov	_TCON,#0x40
                    0185   1766 	C$lab3_1.c$189$1$1 ==.
                           1767 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:189: TMOD	&= 0x0F;
   0185 53 89 0F           1768 	anl	_TMOD,#0x0F
                    0188   1769 	C$lab3_1.c$190$1$1 ==.
                           1770 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:190: TMOD	|= 0x20;				// Timer1, Mode 2: 8-bit counter/timer with auto-reload.
   0188 43 89 20           1771 	orl	_TMOD,#0x20
                    018B   1772 	C$lab3_1.c$191$1$1 ==.
                           1773 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:191: CKCON |= 0x10;
   018B 43 8E 10           1774 	orl	_CKCON,#0x10
                    018E   1775 	C$lab3_1.c$192$1$1 ==.
                           1776 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:192: TH1 = 0xA0;						//set baudrate 115200
   018E 75 8D A0           1777 	mov	_TH1,#0xA0
                    0191   1778 	C$lab3_1.c$193$1$1 ==.
                           1779 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:193: TR1 = 1;						//start timer1 
   0191 D2 8E              1780 	setb	_TR1
                    0193   1781 	C$lab3_1.c$195$1$1 ==.
                           1782 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:195: SFRPAGE = TMR2_PAGE;
   0193 75 84 00           1783 	mov	_SFRPAGE,#0x00
                    0196   1784 	C$lab3_1.c$196$1$1 ==.
                           1785 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:196: TMR2CN = 0x04;
   0196 75 C8 04           1786 	mov	_TMR2CN,#0x04
                    0199   1787 	C$lab3_1.c$197$1$1 ==.
                           1788 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:197: TMR2CF = 0x08;
   0199 75 C9 08           1789 	mov	_TMR2CF,#0x08
                    019C   1790 	C$lab3_1.c$198$1$1 ==.
                           1791 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:198: RCAP2L = 0x70;					//set baudrate 9600
   019C 75 CA 70           1792 	mov	_RCAP2L,#0x70
                    019F   1793 	C$lab3_1.c$199$1$1 ==.
                           1794 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:199: RCAP2H = 0xFF;
   019F 75 CB FF           1795 	mov	_RCAP2H,#0xFF
                    01A2   1796 	C$lab3_1.c$200$1$1 ==.
                           1797 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:200: TR2 = 1;						//start timer2
   01A2 D2 CA              1798 	setb	_TR2
                    01A4   1799 	C$lab3_1.c$202$1$1 ==.
                           1800 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:202: SFRPAGE = SFRPAGE_SAVE;         // Restore SFR page
   01A4 8A 84              1801 	mov	_SFRPAGE,r2
                    01A6   1802 	C$lab3_1.c$203$1$1 ==.
                    01A6   1803 	XG$Timer_Init$0$0 ==.
   01A6 22                 1804 	ret
                           1805 ;------------------------------------------------------------
                           1806 ;Allocation info for local variables in function 'Timer1_ISR'
                           1807 ;------------------------------------------------------------
                           1808 ;------------------------------------------------------------
                    01A7   1809 	G$Timer1_ISR$0$0 ==.
                    01A7   1810 	C$lab3_1.c$205$1$1 ==.
                           1811 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:205: void Timer1_ISR(void) interrupt 3
                           1812 ;	-----------------------------------------
                           1813 ;	 function Timer1_ISR
                           1814 ;	-----------------------------------------
   01A7                    1815 _Timer1_ISR:
                    01A7   1816 	C$lab3_1.c$209$1$1 ==.
                           1817 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:209: }
                    01A7   1818 	C$lab3_1.c$209$1$1 ==.
                    01A7   1819 	XG$Timer1_ISR$0$0 ==.
   01A7 32                 1820 	reti
                           1821 ;	eliminated unneeded push/pop psw
                           1822 ;	eliminated unneeded push/pop dpl
                           1823 ;	eliminated unneeded push/pop dph
                           1824 ;	eliminated unneeded push/pop b
                           1825 ;	eliminated unneeded push/pop acc
                           1826 ;------------------------------------------------------------
                           1827 ;Allocation info for local variables in function 'Timer2_ISR'
                           1828 ;------------------------------------------------------------
                           1829 ;------------------------------------------------------------
                    01A8   1830 	G$Timer2_ISR$0$0 ==.
                    01A8   1831 	C$lab3_1.c$211$1$1 ==.
                           1832 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:211: void Timer2_ISR (void) interrupt 5
                           1833 ;	-----------------------------------------
                           1834 ;	 function Timer2_ISR
                           1835 ;	-----------------------------------------
   01A8                    1836 _Timer2_ISR:
                    01A8   1837 	C$lab3_1.c$215$1$1 ==.
                           1838 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 3\lab3-1.c:215: TF2 = 0;
   01A8 C2 CF              1839 	clr	_TF2
                    01AA   1840 	C$lab3_1.c$216$1$1 ==.
                    01AA   1841 	XG$Timer2_ISR$0$0 ==.
   01AA 32                 1842 	reti
                           1843 ;	eliminated unneeded push/pop psw
                           1844 ;	eliminated unneeded push/pop dpl
                           1845 ;	eliminated unneeded push/pop dph
                           1846 ;	eliminated unneeded push/pop b
                           1847 ;	eliminated unneeded push/pop acc
                           1848 	.area CSEG    (CODE)
                           1849 	.area CONST   (CODE)
                    0000   1850 Flab3_1$_str_0$0$0 == .
   0000                    1851 __str_0:
   0000 1B                 1852 	.db 0x1B
   0001 5B 32 4A           1853 	.ascii "[2J"
   0004 00                 1854 	.db 0x00
                    0005   1855 Flab3_1$_str_1$0$0 == .
   0005                    1856 __str_1:
   0005 49 20 61 6D 20 55  1857 	.ascii "I am UART0 :D"
        41 52 54 30 20 3A
        44
   0012 0A                 1858 	.db 0x0A
   0013 0A                 1859 	.db 0x0A
   0014 0D                 1860 	.db 0x0D
   0015 00                 1861 	.db 0x00
                    0016   1862 Flab3_1$_str_2$0$0 == .
   0016                    1863 __str_2:
   0016 49 20 61 6D 20 55  1864 	.ascii "I am UART1."
        41 52 54 31 2E
   0021 0A                 1865 	.db 0x0A
   0022 0A                 1866 	.db 0x0A
   0023 0D                 1867 	.db 0x0D
   0024 00                 1868 	.db 0x00
                    0025   1869 Flab3_1$_str_3$0$0 == .
   0025                    1870 __str_3:
   0025 25 63              1871 	.ascii "%c"
   0027 00                 1872 	.db 0x00
                           1873 	.area XINIT   (CODE)
                           1874 	.area CABS    (ABS,CODE)
