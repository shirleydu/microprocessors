                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (MINGW32)
                              4 ; This file was generated Thu Nov 01 16:09:58 2012
                              5 ;--------------------------------------------------------
                              6 	.module lab4_3_2
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _P7_7
                             13 	.globl _P7_6
                             14 	.globl _P7_5
                             15 	.globl _P7_4
                             16 	.globl _P7_3
                             17 	.globl _P7_2
                             18 	.globl _P7_1
                             19 	.globl _P7_0
                             20 	.globl _SPIF
                             21 	.globl _WCOL
                             22 	.globl _MODF
                             23 	.globl _RXOVRN
                             24 	.globl _NSSMD1
                             25 	.globl _NSSMD0
                             26 	.globl _TXBMT
                             27 	.globl _SPIEN
                             28 	.globl _P6_7
                             29 	.globl _P6_6
                             30 	.globl _P6_5
                             31 	.globl _P6_4
                             32 	.globl _P6_3
                             33 	.globl _P6_2
                             34 	.globl _P6_1
                             35 	.globl _P6_0
                             36 	.globl _AD2EN
                             37 	.globl _AD2TM
                             38 	.globl _AD2INT
                             39 	.globl _AD2BUSY
                             40 	.globl _AD2CM2
                             41 	.globl _AD2CM1
                             42 	.globl _AD2CM0
                             43 	.globl _AD2WINT
                             44 	.globl _AD0EN
                             45 	.globl _AD0TM
                             46 	.globl _AD0INT
                             47 	.globl _AD0BUSY
                             48 	.globl _AD0CM1
                             49 	.globl _AD0CM0
                             50 	.globl _AD0WINT
                             51 	.globl _AD0LJST
                             52 	.globl _P5_7
                             53 	.globl _P5_6
                             54 	.globl _P5_5
                             55 	.globl _P5_4
                             56 	.globl _P5_3
                             57 	.globl _P5_2
                             58 	.globl _P5_1
                             59 	.globl _P5_0
                             60 	.globl _CF
                             61 	.globl _CR
                             62 	.globl _CCF5
                             63 	.globl _CCF4
                             64 	.globl _CCF3
                             65 	.globl _CCF2
                             66 	.globl _CCF1
                             67 	.globl _CCF0
                             68 	.globl _CY
                             69 	.globl _AC
                             70 	.globl _F0
                             71 	.globl _RS1
                             72 	.globl _RS0
                             73 	.globl _OV
                             74 	.globl _F1
                             75 	.globl _P
                             76 	.globl _P4_7
                             77 	.globl _P4_6
                             78 	.globl _P4_5
                             79 	.globl _P4_4
                             80 	.globl _P4_3
                             81 	.globl _P4_2
                             82 	.globl _P4_1
                             83 	.globl _P4_0
                             84 	.globl _TF4
                             85 	.globl _EXF4
                             86 	.globl _EXEN4
                             87 	.globl _TR4
                             88 	.globl _CT4
                             89 	.globl _CPRL4
                             90 	.globl _TF3
                             91 	.globl _EXF3
                             92 	.globl _EXEN3
                             93 	.globl _TR3
                             94 	.globl _CT3
                             95 	.globl _CPRL3
                             96 	.globl _TF2
                             97 	.globl _EXF2
                             98 	.globl _EXEN2
                             99 	.globl _TR2
                            100 	.globl _CT2
                            101 	.globl _CPRL2
                            102 	.globl _MAC0HO
                            103 	.globl _MAC0Z
                            104 	.globl _MAC0SO
                            105 	.globl _MAC0N
                            106 	.globl _BUSY
                            107 	.globl _ENSMB
                            108 	.globl _STA
                            109 	.globl _STO
                            110 	.globl _SI
                            111 	.globl _AA
                            112 	.globl _SMBFTE
                            113 	.globl _SMBTOE
                            114 	.globl _PT2
                            115 	.globl _PS
                            116 	.globl _PS0
                            117 	.globl _PT1
                            118 	.globl _PX1
                            119 	.globl _PT0
                            120 	.globl _PX0
                            121 	.globl _P3_7
                            122 	.globl _P3_6
                            123 	.globl _P3_5
                            124 	.globl _P3_4
                            125 	.globl _P3_3
                            126 	.globl _P3_2
                            127 	.globl _P3_1
                            128 	.globl _P3_0
                            129 	.globl _EA
                            130 	.globl _ET2
                            131 	.globl _ES
                            132 	.globl _ES0
                            133 	.globl _ET1
                            134 	.globl _EX1
                            135 	.globl _ET0
                            136 	.globl _EX0
                            137 	.globl _P2_7
                            138 	.globl _P2_6
                            139 	.globl _P2_5
                            140 	.globl _P2_4
                            141 	.globl _P2_3
                            142 	.globl _P2_2
                            143 	.globl _P2_1
                            144 	.globl _P2_0
                            145 	.globl _S1MODE
                            146 	.globl _MCE1
                            147 	.globl _REN1
                            148 	.globl _TB81
                            149 	.globl _RB81
                            150 	.globl _TI1
                            151 	.globl _RI1
                            152 	.globl _SM00
                            153 	.globl _SM10
                            154 	.globl _SM20
                            155 	.globl _REN
                            156 	.globl _REN0
                            157 	.globl _TB80
                            158 	.globl _RB80
                            159 	.globl _TI
                            160 	.globl _TI0
                            161 	.globl _RI
                            162 	.globl _RI0
                            163 	.globl _P1_7
                            164 	.globl _P1_6
                            165 	.globl _P1_5
                            166 	.globl _P1_4
                            167 	.globl _P1_3
                            168 	.globl _P1_2
                            169 	.globl _P1_1
                            170 	.globl _P1_0
                            171 	.globl _FLHBUSY
                            172 	.globl _CP1EN
                            173 	.globl _CP1OUT
                            174 	.globl _CP1RIF
                            175 	.globl _CP1FIF
                            176 	.globl _CP1HYP1
                            177 	.globl _CP1HYP0
                            178 	.globl _CP1HYN1
                            179 	.globl _CP1HYN0
                            180 	.globl _CP0EN
                            181 	.globl _CP0OUT
                            182 	.globl _CP0RIF
                            183 	.globl _CP0FIF
                            184 	.globl _CP0HYP1
                            185 	.globl _CP0HYP0
                            186 	.globl _CP0HYN1
                            187 	.globl _CP0HYN0
                            188 	.globl _TF1
                            189 	.globl _TR1
                            190 	.globl _TF0
                            191 	.globl _TR0
                            192 	.globl _IE1
                            193 	.globl _IT1
                            194 	.globl _IE0
                            195 	.globl _IT0
                            196 	.globl _P0_7
                            197 	.globl _P0_6
                            198 	.globl _P0_5
                            199 	.globl _P0_4
                            200 	.globl _P0_3
                            201 	.globl _P0_2
                            202 	.globl _P0_1
                            203 	.globl _P0_0
                            204 	.globl _MAC0RND
                            205 	.globl _MAC0ACC
                            206 	.globl _MAC0A
                            207 	.globl _RCAP4
                            208 	.globl _TMR4
                            209 	.globl _DAC1
                            210 	.globl _RCAP3
                            211 	.globl _TMR3
                            212 	.globl _PCA0CP5
                            213 	.globl _PCA0CP4
                            214 	.globl _PCA0CP3
                            215 	.globl _PCA0CP2
                            216 	.globl _PCA0CP1
                            217 	.globl _PCA0CP0
                            218 	.globl _PCA0
                            219 	.globl _DAC0
                            220 	.globl _ADC0LT
                            221 	.globl _ADC0GT
                            222 	.globl _ADC0
                            223 	.globl _RCAP2
                            224 	.globl _TMR2
                            225 	.globl _TMR1
                            226 	.globl _TMR0
                            227 	.globl _P7
                            228 	.globl _P6
                            229 	.globl _XBR2
                            230 	.globl _XBR1
                            231 	.globl _XBR0
                            232 	.globl _P5
                            233 	.globl _P4
                            234 	.globl _FLACL
                            235 	.globl _P1MDIN
                            236 	.globl _P3MDOUT
                            237 	.globl _P2MDOUT
                            238 	.globl _P1MDOUT
                            239 	.globl _P0MDOUT
                            240 	.globl _CCH0LC
                            241 	.globl _CCH0TN
                            242 	.globl _CCH0CN
                            243 	.globl _P7MDOUT
                            244 	.globl _P6MDOUT
                            245 	.globl _P5MDOUT
                            246 	.globl _P4MDOUT
                            247 	.globl _CCH0MA
                            248 	.globl _CLKSEL
                            249 	.globl _SFRPGCN
                            250 	.globl _PLL0FLT
                            251 	.globl _PLL0MUL
                            252 	.globl _PLL0DIV
                            253 	.globl _OSCXCN
                            254 	.globl _OSCICL
                            255 	.globl _OSCICN
                            256 	.globl _PLL0CN
                            257 	.globl _FLSTAT
                            258 	.globl _MAC0RNDH
                            259 	.globl _MAC0RNDL
                            260 	.globl _MAC0CF
                            261 	.globl _MAC0AH
                            262 	.globl _MAC0AL
                            263 	.globl _MAC0STA
                            264 	.globl _MAC0OVR
                            265 	.globl _MAC0ACC3
                            266 	.globl _MAC0ACC2
                            267 	.globl _MAC0ACC1
                            268 	.globl _MAC0ACC0
                            269 	.globl _MAC0BH
                            270 	.globl _MAC0BL
                            271 	.globl _ADC2CN
                            272 	.globl _TMR4H
                            273 	.globl _TMR4L
                            274 	.globl _RCAP4H
                            275 	.globl _RCAP4L
                            276 	.globl _TMR4CF
                            277 	.globl _TMR4CN
                            278 	.globl _ADC2LT
                            279 	.globl _ADC2GT
                            280 	.globl _ADC2
                            281 	.globl _ADC2CF
                            282 	.globl _AMX2SL
                            283 	.globl _AMX2CF
                            284 	.globl _CPT1MD
                            285 	.globl _CPT1CN
                            286 	.globl _DAC1CN
                            287 	.globl _DAC1H
                            288 	.globl _DAC1L
                            289 	.globl _TMR3H
                            290 	.globl _TMR3L
                            291 	.globl _RCAP3H
                            292 	.globl _RCAP3L
                            293 	.globl _TMR3CF
                            294 	.globl _TMR3CN
                            295 	.globl _SBUF1
                            296 	.globl _SCON1
                            297 	.globl _CPT0MD
                            298 	.globl _CPT0CN
                            299 	.globl _PCA0CPH1
                            300 	.globl _PCA0CPL1
                            301 	.globl _PCA0CPH0
                            302 	.globl _PCA0CPL0
                            303 	.globl _PCA0H
                            304 	.globl _PCA0L
                            305 	.globl _SPI0CN
                            306 	.globl _RSTSRC
                            307 	.globl _PCA0CPH4
                            308 	.globl _PCA0CPL4
                            309 	.globl _PCA0CPH3
                            310 	.globl _PCA0CPL3
                            311 	.globl _PCA0CPH2
                            312 	.globl _PCA0CPL2
                            313 	.globl _ADC0CN
                            314 	.globl _PCA0CPH5
                            315 	.globl _PCA0CPL5
                            316 	.globl _PCA0CPM5
                            317 	.globl _PCA0CPM4
                            318 	.globl _PCA0CPM3
                            319 	.globl _PCA0CPM2
                            320 	.globl _PCA0CPM1
                            321 	.globl _PCA0CPM0
                            322 	.globl _PCA0MD
                            323 	.globl _PCA0CN
                            324 	.globl _DAC0CN
                            325 	.globl _DAC0H
                            326 	.globl _DAC0L
                            327 	.globl _REF0CN
                            328 	.globl _SMB0CR
                            329 	.globl _TH2
                            330 	.globl _TMR2H
                            331 	.globl _TL2
                            332 	.globl _TMR2L
                            333 	.globl _RCAP2H
                            334 	.globl _RCAP2L
                            335 	.globl _TMR2CF
                            336 	.globl _TMR2CN
                            337 	.globl _ADC0LTH
                            338 	.globl _ADC0LTL
                            339 	.globl _ADC0GTH
                            340 	.globl _ADC0GTL
                            341 	.globl _SMB0ADR
                            342 	.globl _SMB0DAT
                            343 	.globl _SMB0STA
                            344 	.globl _SMB0CN
                            345 	.globl _ADC0H
                            346 	.globl _ADC0L
                            347 	.globl _ADC0CF
                            348 	.globl _AMX0SL
                            349 	.globl _AMX0CF
                            350 	.globl _SADEN0
                            351 	.globl _FLSCL
                            352 	.globl _SADDR0
                            353 	.globl _EMI0CF
                            354 	.globl __XPAGE
                            355 	.globl _EMI0CN
                            356 	.globl _EMI0TC
                            357 	.globl _SPI0CKR
                            358 	.globl _SPI0DAT
                            359 	.globl _SPI0CFG
                            360 	.globl _SBUF
                            361 	.globl _SBUF0
                            362 	.globl _SCON
                            363 	.globl _SCON0
                            364 	.globl _SSTA0
                            365 	.globl _PSCTL
                            366 	.globl _CKCON
                            367 	.globl _TH1
                            368 	.globl _TH0
                            369 	.globl _TL1
                            370 	.globl _TL0
                            371 	.globl _TMOD
                            372 	.globl _TCON
                            373 	.globl _WDTCN
                            374 	.globl _EIP2
                            375 	.globl _EIP1
                            376 	.globl _B
                            377 	.globl _EIE2
                            378 	.globl _EIE1
                            379 	.globl _ACC
                            380 	.globl _PSW
                            381 	.globl _IP
                            382 	.globl _PSBANK
                            383 	.globl _P3
                            384 	.globl _IE
                            385 	.globl _P2
                            386 	.globl _P1
                            387 	.globl _PCON
                            388 	.globl _SFRLAST
                            389 	.globl _SFRNEXT
                            390 	.globl _SFRPAGE
                            391 	.globl _DPH
                            392 	.globl _DPL
                            393 	.globl _SP
                            394 	.globl _P0
                            395 	.globl _putchar
                            396 	.globl _getchar
                            397 	.globl _main
                            398 	.globl _SYSCLK_INIT
                            399 	.globl _PORT_INIT
                            400 	.globl _UART0_INIT
                            401 	.globl _ADC_Init
                            402 	.globl _DAC_Init
                            403 ;--------------------------------------------------------
                            404 ; special function registers
                            405 ;--------------------------------------------------------
                            406 	.area RSEG    (DATA)
                    0080    407 G$P0$0$0 == 0x0080
                    0080    408 _P0	=	0x0080
                    0081    409 G$SP$0$0 == 0x0081
                    0081    410 _SP	=	0x0081
                    0082    411 G$DPL$0$0 == 0x0082
                    0082    412 _DPL	=	0x0082
                    0083    413 G$DPH$0$0 == 0x0083
                    0083    414 _DPH	=	0x0083
                    0084    415 G$SFRPAGE$0$0 == 0x0084
                    0084    416 _SFRPAGE	=	0x0084
                    0085    417 G$SFRNEXT$0$0 == 0x0085
                    0085    418 _SFRNEXT	=	0x0085
                    0086    419 G$SFRLAST$0$0 == 0x0086
                    0086    420 _SFRLAST	=	0x0086
                    0087    421 G$PCON$0$0 == 0x0087
                    0087    422 _PCON	=	0x0087
                    0090    423 G$P1$0$0 == 0x0090
                    0090    424 _P1	=	0x0090
                    00A0    425 G$P2$0$0 == 0x00a0
                    00A0    426 _P2	=	0x00a0
                    00A8    427 G$IE$0$0 == 0x00a8
                    00A8    428 _IE	=	0x00a8
                    00B0    429 G$P3$0$0 == 0x00b0
                    00B0    430 _P3	=	0x00b0
                    00B1    431 G$PSBANK$0$0 == 0x00b1
                    00B1    432 _PSBANK	=	0x00b1
                    00B8    433 G$IP$0$0 == 0x00b8
                    00B8    434 _IP	=	0x00b8
                    00D0    435 G$PSW$0$0 == 0x00d0
                    00D0    436 _PSW	=	0x00d0
                    00E0    437 G$ACC$0$0 == 0x00e0
                    00E0    438 _ACC	=	0x00e0
                    00E6    439 G$EIE1$0$0 == 0x00e6
                    00E6    440 _EIE1	=	0x00e6
                    00E7    441 G$EIE2$0$0 == 0x00e7
                    00E7    442 _EIE2	=	0x00e7
                    00F0    443 G$B$0$0 == 0x00f0
                    00F0    444 _B	=	0x00f0
                    00F6    445 G$EIP1$0$0 == 0x00f6
                    00F6    446 _EIP1	=	0x00f6
                    00F7    447 G$EIP2$0$0 == 0x00f7
                    00F7    448 _EIP2	=	0x00f7
                    00FF    449 G$WDTCN$0$0 == 0x00ff
                    00FF    450 _WDTCN	=	0x00ff
                    0088    451 G$TCON$0$0 == 0x0088
                    0088    452 _TCON	=	0x0088
                    0089    453 G$TMOD$0$0 == 0x0089
                    0089    454 _TMOD	=	0x0089
                    008A    455 G$TL0$0$0 == 0x008a
                    008A    456 _TL0	=	0x008a
                    008B    457 G$TL1$0$0 == 0x008b
                    008B    458 _TL1	=	0x008b
                    008C    459 G$TH0$0$0 == 0x008c
                    008C    460 _TH0	=	0x008c
                    008D    461 G$TH1$0$0 == 0x008d
                    008D    462 _TH1	=	0x008d
                    008E    463 G$CKCON$0$0 == 0x008e
                    008E    464 _CKCON	=	0x008e
                    008F    465 G$PSCTL$0$0 == 0x008f
                    008F    466 _PSCTL	=	0x008f
                    0091    467 G$SSTA0$0$0 == 0x0091
                    0091    468 _SSTA0	=	0x0091
                    0098    469 G$SCON0$0$0 == 0x0098
                    0098    470 _SCON0	=	0x0098
                    0098    471 G$SCON$0$0 == 0x0098
                    0098    472 _SCON	=	0x0098
                    0099    473 G$SBUF0$0$0 == 0x0099
                    0099    474 _SBUF0	=	0x0099
                    0099    475 G$SBUF$0$0 == 0x0099
                    0099    476 _SBUF	=	0x0099
                    009A    477 G$SPI0CFG$0$0 == 0x009a
                    009A    478 _SPI0CFG	=	0x009a
                    009B    479 G$SPI0DAT$0$0 == 0x009b
                    009B    480 _SPI0DAT	=	0x009b
                    009D    481 G$SPI0CKR$0$0 == 0x009d
                    009D    482 _SPI0CKR	=	0x009d
                    00A1    483 G$EMI0TC$0$0 == 0x00a1
                    00A1    484 _EMI0TC	=	0x00a1
                    00A2    485 G$EMI0CN$0$0 == 0x00a2
                    00A2    486 _EMI0CN	=	0x00a2
                    00A2    487 G$_XPAGE$0$0 == 0x00a2
                    00A2    488 __XPAGE	=	0x00a2
                    00A3    489 G$EMI0CF$0$0 == 0x00a3
                    00A3    490 _EMI0CF	=	0x00a3
                    00A9    491 G$SADDR0$0$0 == 0x00a9
                    00A9    492 _SADDR0	=	0x00a9
                    00B7    493 G$FLSCL$0$0 == 0x00b7
                    00B7    494 _FLSCL	=	0x00b7
                    00B9    495 G$SADEN0$0$0 == 0x00b9
                    00B9    496 _SADEN0	=	0x00b9
                    00BA    497 G$AMX0CF$0$0 == 0x00ba
                    00BA    498 _AMX0CF	=	0x00ba
                    00BB    499 G$AMX0SL$0$0 == 0x00bb
                    00BB    500 _AMX0SL	=	0x00bb
                    00BC    501 G$ADC0CF$0$0 == 0x00bc
                    00BC    502 _ADC0CF	=	0x00bc
                    00BE    503 G$ADC0L$0$0 == 0x00be
                    00BE    504 _ADC0L	=	0x00be
                    00BF    505 G$ADC0H$0$0 == 0x00bf
                    00BF    506 _ADC0H	=	0x00bf
                    00C0    507 G$SMB0CN$0$0 == 0x00c0
                    00C0    508 _SMB0CN	=	0x00c0
                    00C1    509 G$SMB0STA$0$0 == 0x00c1
                    00C1    510 _SMB0STA	=	0x00c1
                    00C2    511 G$SMB0DAT$0$0 == 0x00c2
                    00C2    512 _SMB0DAT	=	0x00c2
                    00C3    513 G$SMB0ADR$0$0 == 0x00c3
                    00C3    514 _SMB0ADR	=	0x00c3
                    00C4    515 G$ADC0GTL$0$0 == 0x00c4
                    00C4    516 _ADC0GTL	=	0x00c4
                    00C5    517 G$ADC0GTH$0$0 == 0x00c5
                    00C5    518 _ADC0GTH	=	0x00c5
                    00C6    519 G$ADC0LTL$0$0 == 0x00c6
                    00C6    520 _ADC0LTL	=	0x00c6
                    00C7    521 G$ADC0LTH$0$0 == 0x00c7
                    00C7    522 _ADC0LTH	=	0x00c7
                    00C8    523 G$TMR2CN$0$0 == 0x00c8
                    00C8    524 _TMR2CN	=	0x00c8
                    00C9    525 G$TMR2CF$0$0 == 0x00c9
                    00C9    526 _TMR2CF	=	0x00c9
                    00CA    527 G$RCAP2L$0$0 == 0x00ca
                    00CA    528 _RCAP2L	=	0x00ca
                    00CB    529 G$RCAP2H$0$0 == 0x00cb
                    00CB    530 _RCAP2H	=	0x00cb
                    00CC    531 G$TMR2L$0$0 == 0x00cc
                    00CC    532 _TMR2L	=	0x00cc
                    00CC    533 G$TL2$0$0 == 0x00cc
                    00CC    534 _TL2	=	0x00cc
                    00CD    535 G$TMR2H$0$0 == 0x00cd
                    00CD    536 _TMR2H	=	0x00cd
                    00CD    537 G$TH2$0$0 == 0x00cd
                    00CD    538 _TH2	=	0x00cd
                    00CF    539 G$SMB0CR$0$0 == 0x00cf
                    00CF    540 _SMB0CR	=	0x00cf
                    00D1    541 G$REF0CN$0$0 == 0x00d1
                    00D1    542 _REF0CN	=	0x00d1
                    00D2    543 G$DAC0L$0$0 == 0x00d2
                    00D2    544 _DAC0L	=	0x00d2
                    00D3    545 G$DAC0H$0$0 == 0x00d3
                    00D3    546 _DAC0H	=	0x00d3
                    00D4    547 G$DAC0CN$0$0 == 0x00d4
                    00D4    548 _DAC0CN	=	0x00d4
                    00D8    549 G$PCA0CN$0$0 == 0x00d8
                    00D8    550 _PCA0CN	=	0x00d8
                    00D9    551 G$PCA0MD$0$0 == 0x00d9
                    00D9    552 _PCA0MD	=	0x00d9
                    00DA    553 G$PCA0CPM0$0$0 == 0x00da
                    00DA    554 _PCA0CPM0	=	0x00da
                    00DB    555 G$PCA0CPM1$0$0 == 0x00db
                    00DB    556 _PCA0CPM1	=	0x00db
                    00DC    557 G$PCA0CPM2$0$0 == 0x00dc
                    00DC    558 _PCA0CPM2	=	0x00dc
                    00DD    559 G$PCA0CPM3$0$0 == 0x00dd
                    00DD    560 _PCA0CPM3	=	0x00dd
                    00DE    561 G$PCA0CPM4$0$0 == 0x00de
                    00DE    562 _PCA0CPM4	=	0x00de
                    00DF    563 G$PCA0CPM5$0$0 == 0x00df
                    00DF    564 _PCA0CPM5	=	0x00df
                    00E1    565 G$PCA0CPL5$0$0 == 0x00e1
                    00E1    566 _PCA0CPL5	=	0x00e1
                    00E2    567 G$PCA0CPH5$0$0 == 0x00e2
                    00E2    568 _PCA0CPH5	=	0x00e2
                    00E8    569 G$ADC0CN$0$0 == 0x00e8
                    00E8    570 _ADC0CN	=	0x00e8
                    00E9    571 G$PCA0CPL2$0$0 == 0x00e9
                    00E9    572 _PCA0CPL2	=	0x00e9
                    00EA    573 G$PCA0CPH2$0$0 == 0x00ea
                    00EA    574 _PCA0CPH2	=	0x00ea
                    00EB    575 G$PCA0CPL3$0$0 == 0x00eb
                    00EB    576 _PCA0CPL3	=	0x00eb
                    00EC    577 G$PCA0CPH3$0$0 == 0x00ec
                    00EC    578 _PCA0CPH3	=	0x00ec
                    00ED    579 G$PCA0CPL4$0$0 == 0x00ed
                    00ED    580 _PCA0CPL4	=	0x00ed
                    00EE    581 G$PCA0CPH4$0$0 == 0x00ee
                    00EE    582 _PCA0CPH4	=	0x00ee
                    00EF    583 G$RSTSRC$0$0 == 0x00ef
                    00EF    584 _RSTSRC	=	0x00ef
                    00F8    585 G$SPI0CN$0$0 == 0x00f8
                    00F8    586 _SPI0CN	=	0x00f8
                    00F9    587 G$PCA0L$0$0 == 0x00f9
                    00F9    588 _PCA0L	=	0x00f9
                    00FA    589 G$PCA0H$0$0 == 0x00fa
                    00FA    590 _PCA0H	=	0x00fa
                    00FB    591 G$PCA0CPL0$0$0 == 0x00fb
                    00FB    592 _PCA0CPL0	=	0x00fb
                    00FC    593 G$PCA0CPH0$0$0 == 0x00fc
                    00FC    594 _PCA0CPH0	=	0x00fc
                    00FD    595 G$PCA0CPL1$0$0 == 0x00fd
                    00FD    596 _PCA0CPL1	=	0x00fd
                    00FE    597 G$PCA0CPH1$0$0 == 0x00fe
                    00FE    598 _PCA0CPH1	=	0x00fe
                    0088    599 G$CPT0CN$0$0 == 0x0088
                    0088    600 _CPT0CN	=	0x0088
                    0089    601 G$CPT0MD$0$0 == 0x0089
                    0089    602 _CPT0MD	=	0x0089
                    0098    603 G$SCON1$0$0 == 0x0098
                    0098    604 _SCON1	=	0x0098
                    0099    605 G$SBUF1$0$0 == 0x0099
                    0099    606 _SBUF1	=	0x0099
                    00C8    607 G$TMR3CN$0$0 == 0x00c8
                    00C8    608 _TMR3CN	=	0x00c8
                    00C9    609 G$TMR3CF$0$0 == 0x00c9
                    00C9    610 _TMR3CF	=	0x00c9
                    00CA    611 G$RCAP3L$0$0 == 0x00ca
                    00CA    612 _RCAP3L	=	0x00ca
                    00CB    613 G$RCAP3H$0$0 == 0x00cb
                    00CB    614 _RCAP3H	=	0x00cb
                    00CC    615 G$TMR3L$0$0 == 0x00cc
                    00CC    616 _TMR3L	=	0x00cc
                    00CD    617 G$TMR3H$0$0 == 0x00cd
                    00CD    618 _TMR3H	=	0x00cd
                    00D2    619 G$DAC1L$0$0 == 0x00d2
                    00D2    620 _DAC1L	=	0x00d2
                    00D3    621 G$DAC1H$0$0 == 0x00d3
                    00D3    622 _DAC1H	=	0x00d3
                    00D4    623 G$DAC1CN$0$0 == 0x00d4
                    00D4    624 _DAC1CN	=	0x00d4
                    0088    625 G$CPT1CN$0$0 == 0x0088
                    0088    626 _CPT1CN	=	0x0088
                    0089    627 G$CPT1MD$0$0 == 0x0089
                    0089    628 _CPT1MD	=	0x0089
                    00BA    629 G$AMX2CF$0$0 == 0x00ba
                    00BA    630 _AMX2CF	=	0x00ba
                    00BB    631 G$AMX2SL$0$0 == 0x00bb
                    00BB    632 _AMX2SL	=	0x00bb
                    00BC    633 G$ADC2CF$0$0 == 0x00bc
                    00BC    634 _ADC2CF	=	0x00bc
                    00BE    635 G$ADC2$0$0 == 0x00be
                    00BE    636 _ADC2	=	0x00be
                    00C4    637 G$ADC2GT$0$0 == 0x00c4
                    00C4    638 _ADC2GT	=	0x00c4
                    00C6    639 G$ADC2LT$0$0 == 0x00c6
                    00C6    640 _ADC2LT	=	0x00c6
                    00C8    641 G$TMR4CN$0$0 == 0x00c8
                    00C8    642 _TMR4CN	=	0x00c8
                    00C9    643 G$TMR4CF$0$0 == 0x00c9
                    00C9    644 _TMR4CF	=	0x00c9
                    00CA    645 G$RCAP4L$0$0 == 0x00ca
                    00CA    646 _RCAP4L	=	0x00ca
                    00CB    647 G$RCAP4H$0$0 == 0x00cb
                    00CB    648 _RCAP4H	=	0x00cb
                    00CC    649 G$TMR4L$0$0 == 0x00cc
                    00CC    650 _TMR4L	=	0x00cc
                    00CD    651 G$TMR4H$0$0 == 0x00cd
                    00CD    652 _TMR4H	=	0x00cd
                    00E8    653 G$ADC2CN$0$0 == 0x00e8
                    00E8    654 _ADC2CN	=	0x00e8
                    0091    655 G$MAC0BL$0$0 == 0x0091
                    0091    656 _MAC0BL	=	0x0091
                    0092    657 G$MAC0BH$0$0 == 0x0092
                    0092    658 _MAC0BH	=	0x0092
                    0093    659 G$MAC0ACC0$0$0 == 0x0093
                    0093    660 _MAC0ACC0	=	0x0093
                    0094    661 G$MAC0ACC1$0$0 == 0x0094
                    0094    662 _MAC0ACC1	=	0x0094
                    0095    663 G$MAC0ACC2$0$0 == 0x0095
                    0095    664 _MAC0ACC2	=	0x0095
                    0096    665 G$MAC0ACC3$0$0 == 0x0096
                    0096    666 _MAC0ACC3	=	0x0096
                    0097    667 G$MAC0OVR$0$0 == 0x0097
                    0097    668 _MAC0OVR	=	0x0097
                    00C0    669 G$MAC0STA$0$0 == 0x00c0
                    00C0    670 _MAC0STA	=	0x00c0
                    00C1    671 G$MAC0AL$0$0 == 0x00c1
                    00C1    672 _MAC0AL	=	0x00c1
                    00C2    673 G$MAC0AH$0$0 == 0x00c2
                    00C2    674 _MAC0AH	=	0x00c2
                    00C3    675 G$MAC0CF$0$0 == 0x00c3
                    00C3    676 _MAC0CF	=	0x00c3
                    00CE    677 G$MAC0RNDL$0$0 == 0x00ce
                    00CE    678 _MAC0RNDL	=	0x00ce
                    00CF    679 G$MAC0RNDH$0$0 == 0x00cf
                    00CF    680 _MAC0RNDH	=	0x00cf
                    0088    681 G$FLSTAT$0$0 == 0x0088
                    0088    682 _FLSTAT	=	0x0088
                    0089    683 G$PLL0CN$0$0 == 0x0089
                    0089    684 _PLL0CN	=	0x0089
                    008A    685 G$OSCICN$0$0 == 0x008a
                    008A    686 _OSCICN	=	0x008a
                    008B    687 G$OSCICL$0$0 == 0x008b
                    008B    688 _OSCICL	=	0x008b
                    008C    689 G$OSCXCN$0$0 == 0x008c
                    008C    690 _OSCXCN	=	0x008c
                    008D    691 G$PLL0DIV$0$0 == 0x008d
                    008D    692 _PLL0DIV	=	0x008d
                    008E    693 G$PLL0MUL$0$0 == 0x008e
                    008E    694 _PLL0MUL	=	0x008e
                    008F    695 G$PLL0FLT$0$0 == 0x008f
                    008F    696 _PLL0FLT	=	0x008f
                    0096    697 G$SFRPGCN$0$0 == 0x0096
                    0096    698 _SFRPGCN	=	0x0096
                    0097    699 G$CLKSEL$0$0 == 0x0097
                    0097    700 _CLKSEL	=	0x0097
                    009A    701 G$CCH0MA$0$0 == 0x009a
                    009A    702 _CCH0MA	=	0x009a
                    009C    703 G$P4MDOUT$0$0 == 0x009c
                    009C    704 _P4MDOUT	=	0x009c
                    009D    705 G$P5MDOUT$0$0 == 0x009d
                    009D    706 _P5MDOUT	=	0x009d
                    009E    707 G$P6MDOUT$0$0 == 0x009e
                    009E    708 _P6MDOUT	=	0x009e
                    009F    709 G$P7MDOUT$0$0 == 0x009f
                    009F    710 _P7MDOUT	=	0x009f
                    00A1    711 G$CCH0CN$0$0 == 0x00a1
                    00A1    712 _CCH0CN	=	0x00a1
                    00A2    713 G$CCH0TN$0$0 == 0x00a2
                    00A2    714 _CCH0TN	=	0x00a2
                    00A3    715 G$CCH0LC$0$0 == 0x00a3
                    00A3    716 _CCH0LC	=	0x00a3
                    00A4    717 G$P0MDOUT$0$0 == 0x00a4
                    00A4    718 _P0MDOUT	=	0x00a4
                    00A5    719 G$P1MDOUT$0$0 == 0x00a5
                    00A5    720 _P1MDOUT	=	0x00a5
                    00A6    721 G$P2MDOUT$0$0 == 0x00a6
                    00A6    722 _P2MDOUT	=	0x00a6
                    00A7    723 G$P3MDOUT$0$0 == 0x00a7
                    00A7    724 _P3MDOUT	=	0x00a7
                    00AD    725 G$P1MDIN$0$0 == 0x00ad
                    00AD    726 _P1MDIN	=	0x00ad
                    00B7    727 G$FLACL$0$0 == 0x00b7
                    00B7    728 _FLACL	=	0x00b7
                    00C8    729 G$P4$0$0 == 0x00c8
                    00C8    730 _P4	=	0x00c8
                    00D8    731 G$P5$0$0 == 0x00d8
                    00D8    732 _P5	=	0x00d8
                    00E1    733 G$XBR0$0$0 == 0x00e1
                    00E1    734 _XBR0	=	0x00e1
                    00E2    735 G$XBR1$0$0 == 0x00e2
                    00E2    736 _XBR1	=	0x00e2
                    00E3    737 G$XBR2$0$0 == 0x00e3
                    00E3    738 _XBR2	=	0x00e3
                    00E8    739 G$P6$0$0 == 0x00e8
                    00E8    740 _P6	=	0x00e8
                    00F8    741 G$P7$0$0 == 0x00f8
                    00F8    742 _P7	=	0x00f8
                    8C8A    743 G$TMR0$0$0 == 0x8c8a
                    8C8A    744 _TMR0	=	0x8c8a
                    8D8B    745 G$TMR1$0$0 == 0x8d8b
                    8D8B    746 _TMR1	=	0x8d8b
                    CDCC    747 G$TMR2$0$0 == 0xcdcc
                    CDCC    748 _TMR2	=	0xcdcc
                    CBCA    749 G$RCAP2$0$0 == 0xcbca
                    CBCA    750 _RCAP2	=	0xcbca
                    BFBE    751 G$ADC0$0$0 == 0xbfbe
                    BFBE    752 _ADC0	=	0xbfbe
                    C5C4    753 G$ADC0GT$0$0 == 0xc5c4
                    C5C4    754 _ADC0GT	=	0xc5c4
                    C7C6    755 G$ADC0LT$0$0 == 0xc7c6
                    C7C6    756 _ADC0LT	=	0xc7c6
                    D3D2    757 G$DAC0$0$0 == 0xd3d2
                    D3D2    758 _DAC0	=	0xd3d2
                    FAF9    759 G$PCA0$0$0 == 0xfaf9
                    FAF9    760 _PCA0	=	0xfaf9
                    FCFB    761 G$PCA0CP0$0$0 == 0xfcfb
                    FCFB    762 _PCA0CP0	=	0xfcfb
                    FEFD    763 G$PCA0CP1$0$0 == 0xfefd
                    FEFD    764 _PCA0CP1	=	0xfefd
                    EAE9    765 G$PCA0CP2$0$0 == 0xeae9
                    EAE9    766 _PCA0CP2	=	0xeae9
                    ECEB    767 G$PCA0CP3$0$0 == 0xeceb
                    ECEB    768 _PCA0CP3	=	0xeceb
                    EEED    769 G$PCA0CP4$0$0 == 0xeeed
                    EEED    770 _PCA0CP4	=	0xeeed
                    E2E1    771 G$PCA0CP5$0$0 == 0xe2e1
                    E2E1    772 _PCA0CP5	=	0xe2e1
                    CDCC    773 G$TMR3$0$0 == 0xcdcc
                    CDCC    774 _TMR3	=	0xcdcc
                    CBCA    775 G$RCAP3$0$0 == 0xcbca
                    CBCA    776 _RCAP3	=	0xcbca
                    D3D2    777 G$DAC1$0$0 == 0xd3d2
                    D3D2    778 _DAC1	=	0xd3d2
                    CDCC    779 G$TMR4$0$0 == 0xcdcc
                    CDCC    780 _TMR4	=	0xcdcc
                    CBCA    781 G$RCAP4$0$0 == 0xcbca
                    CBCA    782 _RCAP4	=	0xcbca
                    C2C1    783 G$MAC0A$0$0 == 0xc2c1
                    C2C1    784 _MAC0A	=	0xc2c1
                    96959493    785 G$MAC0ACC$0$0 == 0x96959493
                    96959493    786 _MAC0ACC	=	0x96959493
                    CFCE    787 G$MAC0RND$0$0 == 0xcfce
                    CFCE    788 _MAC0RND	=	0xcfce
                            789 ;--------------------------------------------------------
                            790 ; special function bits
                            791 ;--------------------------------------------------------
                            792 	.area RSEG    (DATA)
                    0080    793 G$P0_0$0$0 == 0x0080
                    0080    794 _P0_0	=	0x0080
                    0081    795 G$P0_1$0$0 == 0x0081
                    0081    796 _P0_1	=	0x0081
                    0082    797 G$P0_2$0$0 == 0x0082
                    0082    798 _P0_2	=	0x0082
                    0083    799 G$P0_3$0$0 == 0x0083
                    0083    800 _P0_3	=	0x0083
                    0084    801 G$P0_4$0$0 == 0x0084
                    0084    802 _P0_4	=	0x0084
                    0085    803 G$P0_5$0$0 == 0x0085
                    0085    804 _P0_5	=	0x0085
                    0086    805 G$P0_6$0$0 == 0x0086
                    0086    806 _P0_6	=	0x0086
                    0087    807 G$P0_7$0$0 == 0x0087
                    0087    808 _P0_7	=	0x0087
                    0088    809 G$IT0$0$0 == 0x0088
                    0088    810 _IT0	=	0x0088
                    0089    811 G$IE0$0$0 == 0x0089
                    0089    812 _IE0	=	0x0089
                    008A    813 G$IT1$0$0 == 0x008a
                    008A    814 _IT1	=	0x008a
                    008B    815 G$IE1$0$0 == 0x008b
                    008B    816 _IE1	=	0x008b
                    008C    817 G$TR0$0$0 == 0x008c
                    008C    818 _TR0	=	0x008c
                    008D    819 G$TF0$0$0 == 0x008d
                    008D    820 _TF0	=	0x008d
                    008E    821 G$TR1$0$0 == 0x008e
                    008E    822 _TR1	=	0x008e
                    008F    823 G$TF1$0$0 == 0x008f
                    008F    824 _TF1	=	0x008f
                    0088    825 G$CP0HYN0$0$0 == 0x0088
                    0088    826 _CP0HYN0	=	0x0088
                    0089    827 G$CP0HYN1$0$0 == 0x0089
                    0089    828 _CP0HYN1	=	0x0089
                    008A    829 G$CP0HYP0$0$0 == 0x008a
                    008A    830 _CP0HYP0	=	0x008a
                    008B    831 G$CP0HYP1$0$0 == 0x008b
                    008B    832 _CP0HYP1	=	0x008b
                    008C    833 G$CP0FIF$0$0 == 0x008c
                    008C    834 _CP0FIF	=	0x008c
                    008D    835 G$CP0RIF$0$0 == 0x008d
                    008D    836 _CP0RIF	=	0x008d
                    008E    837 G$CP0OUT$0$0 == 0x008e
                    008E    838 _CP0OUT	=	0x008e
                    008F    839 G$CP0EN$0$0 == 0x008f
                    008F    840 _CP0EN	=	0x008f
                    0088    841 G$CP1HYN0$0$0 == 0x0088
                    0088    842 _CP1HYN0	=	0x0088
                    0089    843 G$CP1HYN1$0$0 == 0x0089
                    0089    844 _CP1HYN1	=	0x0089
                    008A    845 G$CP1HYP0$0$0 == 0x008a
                    008A    846 _CP1HYP0	=	0x008a
                    008B    847 G$CP1HYP1$0$0 == 0x008b
                    008B    848 _CP1HYP1	=	0x008b
                    008C    849 G$CP1FIF$0$0 == 0x008c
                    008C    850 _CP1FIF	=	0x008c
                    008D    851 G$CP1RIF$0$0 == 0x008d
                    008D    852 _CP1RIF	=	0x008d
                    008E    853 G$CP1OUT$0$0 == 0x008e
                    008E    854 _CP1OUT	=	0x008e
                    008F    855 G$CP1EN$0$0 == 0x008f
                    008F    856 _CP1EN	=	0x008f
                    0088    857 G$FLHBUSY$0$0 == 0x0088
                    0088    858 _FLHBUSY	=	0x0088
                    0090    859 G$P1_0$0$0 == 0x0090
                    0090    860 _P1_0	=	0x0090
                    0091    861 G$P1_1$0$0 == 0x0091
                    0091    862 _P1_1	=	0x0091
                    0092    863 G$P1_2$0$0 == 0x0092
                    0092    864 _P1_2	=	0x0092
                    0093    865 G$P1_3$0$0 == 0x0093
                    0093    866 _P1_3	=	0x0093
                    0094    867 G$P1_4$0$0 == 0x0094
                    0094    868 _P1_4	=	0x0094
                    0095    869 G$P1_5$0$0 == 0x0095
                    0095    870 _P1_5	=	0x0095
                    0096    871 G$P1_6$0$0 == 0x0096
                    0096    872 _P1_6	=	0x0096
                    0097    873 G$P1_7$0$0 == 0x0097
                    0097    874 _P1_7	=	0x0097
                    0098    875 G$RI0$0$0 == 0x0098
                    0098    876 _RI0	=	0x0098
                    0098    877 G$RI$0$0 == 0x0098
                    0098    878 _RI	=	0x0098
                    0099    879 G$TI0$0$0 == 0x0099
                    0099    880 _TI0	=	0x0099
                    0099    881 G$TI$0$0 == 0x0099
                    0099    882 _TI	=	0x0099
                    009A    883 G$RB80$0$0 == 0x009a
                    009A    884 _RB80	=	0x009a
                    009B    885 G$TB80$0$0 == 0x009b
                    009B    886 _TB80	=	0x009b
                    009C    887 G$REN0$0$0 == 0x009c
                    009C    888 _REN0	=	0x009c
                    009C    889 G$REN$0$0 == 0x009c
                    009C    890 _REN	=	0x009c
                    009D    891 G$SM20$0$0 == 0x009d
                    009D    892 _SM20	=	0x009d
                    009E    893 G$SM10$0$0 == 0x009e
                    009E    894 _SM10	=	0x009e
                    009F    895 G$SM00$0$0 == 0x009f
                    009F    896 _SM00	=	0x009f
                    0098    897 G$RI1$0$0 == 0x0098
                    0098    898 _RI1	=	0x0098
                    0099    899 G$TI1$0$0 == 0x0099
                    0099    900 _TI1	=	0x0099
                    009A    901 G$RB81$0$0 == 0x009a
                    009A    902 _RB81	=	0x009a
                    009B    903 G$TB81$0$0 == 0x009b
                    009B    904 _TB81	=	0x009b
                    009C    905 G$REN1$0$0 == 0x009c
                    009C    906 _REN1	=	0x009c
                    009D    907 G$MCE1$0$0 == 0x009d
                    009D    908 _MCE1	=	0x009d
                    009F    909 G$S1MODE$0$0 == 0x009f
                    009F    910 _S1MODE	=	0x009f
                    00A0    911 G$P2_0$0$0 == 0x00a0
                    00A0    912 _P2_0	=	0x00a0
                    00A1    913 G$P2_1$0$0 == 0x00a1
                    00A1    914 _P2_1	=	0x00a1
                    00A2    915 G$P2_2$0$0 == 0x00a2
                    00A2    916 _P2_2	=	0x00a2
                    00A3    917 G$P2_3$0$0 == 0x00a3
                    00A3    918 _P2_3	=	0x00a3
                    00A4    919 G$P2_4$0$0 == 0x00a4
                    00A4    920 _P2_4	=	0x00a4
                    00A5    921 G$P2_5$0$0 == 0x00a5
                    00A5    922 _P2_5	=	0x00a5
                    00A6    923 G$P2_6$0$0 == 0x00a6
                    00A6    924 _P2_6	=	0x00a6
                    00A7    925 G$P2_7$0$0 == 0x00a7
                    00A7    926 _P2_7	=	0x00a7
                    00A8    927 G$EX0$0$0 == 0x00a8
                    00A8    928 _EX0	=	0x00a8
                    00A9    929 G$ET0$0$0 == 0x00a9
                    00A9    930 _ET0	=	0x00a9
                    00AA    931 G$EX1$0$0 == 0x00aa
                    00AA    932 _EX1	=	0x00aa
                    00AB    933 G$ET1$0$0 == 0x00ab
                    00AB    934 _ET1	=	0x00ab
                    00AC    935 G$ES0$0$0 == 0x00ac
                    00AC    936 _ES0	=	0x00ac
                    00AC    937 G$ES$0$0 == 0x00ac
                    00AC    938 _ES	=	0x00ac
                    00AD    939 G$ET2$0$0 == 0x00ad
                    00AD    940 _ET2	=	0x00ad
                    00AF    941 G$EA$0$0 == 0x00af
                    00AF    942 _EA	=	0x00af
                    00B0    943 G$P3_0$0$0 == 0x00b0
                    00B0    944 _P3_0	=	0x00b0
                    00B1    945 G$P3_1$0$0 == 0x00b1
                    00B1    946 _P3_1	=	0x00b1
                    00B2    947 G$P3_2$0$0 == 0x00b2
                    00B2    948 _P3_2	=	0x00b2
                    00B3    949 G$P3_3$0$0 == 0x00b3
                    00B3    950 _P3_3	=	0x00b3
                    00B4    951 G$P3_4$0$0 == 0x00b4
                    00B4    952 _P3_4	=	0x00b4
                    00B5    953 G$P3_5$0$0 == 0x00b5
                    00B5    954 _P3_5	=	0x00b5
                    00B6    955 G$P3_6$0$0 == 0x00b6
                    00B6    956 _P3_6	=	0x00b6
                    00B7    957 G$P3_7$0$0 == 0x00b7
                    00B7    958 _P3_7	=	0x00b7
                    00B8    959 G$PX0$0$0 == 0x00b8
                    00B8    960 _PX0	=	0x00b8
                    00B9    961 G$PT0$0$0 == 0x00b9
                    00B9    962 _PT0	=	0x00b9
                    00BA    963 G$PX1$0$0 == 0x00ba
                    00BA    964 _PX1	=	0x00ba
                    00BB    965 G$PT1$0$0 == 0x00bb
                    00BB    966 _PT1	=	0x00bb
                    00BC    967 G$PS0$0$0 == 0x00bc
                    00BC    968 _PS0	=	0x00bc
                    00BC    969 G$PS$0$0 == 0x00bc
                    00BC    970 _PS	=	0x00bc
                    00BD    971 G$PT2$0$0 == 0x00bd
                    00BD    972 _PT2	=	0x00bd
                    00C0    973 G$SMBTOE$0$0 == 0x00c0
                    00C0    974 _SMBTOE	=	0x00c0
                    00C1    975 G$SMBFTE$0$0 == 0x00c1
                    00C1    976 _SMBFTE	=	0x00c1
                    00C2    977 G$AA$0$0 == 0x00c2
                    00C2    978 _AA	=	0x00c2
                    00C3    979 G$SI$0$0 == 0x00c3
                    00C3    980 _SI	=	0x00c3
                    00C4    981 G$STO$0$0 == 0x00c4
                    00C4    982 _STO	=	0x00c4
                    00C5    983 G$STA$0$0 == 0x00c5
                    00C5    984 _STA	=	0x00c5
                    00C6    985 G$ENSMB$0$0 == 0x00c6
                    00C6    986 _ENSMB	=	0x00c6
                    00C7    987 G$BUSY$0$0 == 0x00c7
                    00C7    988 _BUSY	=	0x00c7
                    00C0    989 G$MAC0N$0$0 == 0x00c0
                    00C0    990 _MAC0N	=	0x00c0
                    00C1    991 G$MAC0SO$0$0 == 0x00c1
                    00C1    992 _MAC0SO	=	0x00c1
                    00C2    993 G$MAC0Z$0$0 == 0x00c2
                    00C2    994 _MAC0Z	=	0x00c2
                    00C3    995 G$MAC0HO$0$0 == 0x00c3
                    00C3    996 _MAC0HO	=	0x00c3
                    00C8    997 G$CPRL2$0$0 == 0x00c8
                    00C8    998 _CPRL2	=	0x00c8
                    00C9    999 G$CT2$0$0 == 0x00c9
                    00C9   1000 _CT2	=	0x00c9
                    00CA   1001 G$TR2$0$0 == 0x00ca
                    00CA   1002 _TR2	=	0x00ca
                    00CB   1003 G$EXEN2$0$0 == 0x00cb
                    00CB   1004 _EXEN2	=	0x00cb
                    00CE   1005 G$EXF2$0$0 == 0x00ce
                    00CE   1006 _EXF2	=	0x00ce
                    00CF   1007 G$TF2$0$0 == 0x00cf
                    00CF   1008 _TF2	=	0x00cf
                    00C8   1009 G$CPRL3$0$0 == 0x00c8
                    00C8   1010 _CPRL3	=	0x00c8
                    00C9   1011 G$CT3$0$0 == 0x00c9
                    00C9   1012 _CT3	=	0x00c9
                    00CA   1013 G$TR3$0$0 == 0x00ca
                    00CA   1014 _TR3	=	0x00ca
                    00CB   1015 G$EXEN3$0$0 == 0x00cb
                    00CB   1016 _EXEN3	=	0x00cb
                    00CE   1017 G$EXF3$0$0 == 0x00ce
                    00CE   1018 _EXF3	=	0x00ce
                    00CF   1019 G$TF3$0$0 == 0x00cf
                    00CF   1020 _TF3	=	0x00cf
                    00C8   1021 G$CPRL4$0$0 == 0x00c8
                    00C8   1022 _CPRL4	=	0x00c8
                    00C9   1023 G$CT4$0$0 == 0x00c9
                    00C9   1024 _CT4	=	0x00c9
                    00CA   1025 G$TR4$0$0 == 0x00ca
                    00CA   1026 _TR4	=	0x00ca
                    00CB   1027 G$EXEN4$0$0 == 0x00cb
                    00CB   1028 _EXEN4	=	0x00cb
                    00CE   1029 G$EXF4$0$0 == 0x00ce
                    00CE   1030 _EXF4	=	0x00ce
                    00CF   1031 G$TF4$0$0 == 0x00cf
                    00CF   1032 _TF4	=	0x00cf
                    00C8   1033 G$P4_0$0$0 == 0x00c8
                    00C8   1034 _P4_0	=	0x00c8
                    00C9   1035 G$P4_1$0$0 == 0x00c9
                    00C9   1036 _P4_1	=	0x00c9
                    00CA   1037 G$P4_2$0$0 == 0x00ca
                    00CA   1038 _P4_2	=	0x00ca
                    00CB   1039 G$P4_3$0$0 == 0x00cb
                    00CB   1040 _P4_3	=	0x00cb
                    00CC   1041 G$P4_4$0$0 == 0x00cc
                    00CC   1042 _P4_4	=	0x00cc
                    00CD   1043 G$P4_5$0$0 == 0x00cd
                    00CD   1044 _P4_5	=	0x00cd
                    00CE   1045 G$P4_6$0$0 == 0x00ce
                    00CE   1046 _P4_6	=	0x00ce
                    00CF   1047 G$P4_7$0$0 == 0x00cf
                    00CF   1048 _P4_7	=	0x00cf
                    00D0   1049 G$P$0$0 == 0x00d0
                    00D0   1050 _P	=	0x00d0
                    00D1   1051 G$F1$0$0 == 0x00d1
                    00D1   1052 _F1	=	0x00d1
                    00D2   1053 G$OV$0$0 == 0x00d2
                    00D2   1054 _OV	=	0x00d2
                    00D3   1055 G$RS0$0$0 == 0x00d3
                    00D3   1056 _RS0	=	0x00d3
                    00D4   1057 G$RS1$0$0 == 0x00d4
                    00D4   1058 _RS1	=	0x00d4
                    00D5   1059 G$F0$0$0 == 0x00d5
                    00D5   1060 _F0	=	0x00d5
                    00D6   1061 G$AC$0$0 == 0x00d6
                    00D6   1062 _AC	=	0x00d6
                    00D7   1063 G$CY$0$0 == 0x00d7
                    00D7   1064 _CY	=	0x00d7
                    00D8   1065 G$CCF0$0$0 == 0x00d8
                    00D8   1066 _CCF0	=	0x00d8
                    00D9   1067 G$CCF1$0$0 == 0x00d9
                    00D9   1068 _CCF1	=	0x00d9
                    00DA   1069 G$CCF2$0$0 == 0x00da
                    00DA   1070 _CCF2	=	0x00da
                    00DB   1071 G$CCF3$0$0 == 0x00db
                    00DB   1072 _CCF3	=	0x00db
                    00DC   1073 G$CCF4$0$0 == 0x00dc
                    00DC   1074 _CCF4	=	0x00dc
                    00DD   1075 G$CCF5$0$0 == 0x00dd
                    00DD   1076 _CCF5	=	0x00dd
                    00DE   1077 G$CR$0$0 == 0x00de
                    00DE   1078 _CR	=	0x00de
                    00DF   1079 G$CF$0$0 == 0x00df
                    00DF   1080 _CF	=	0x00df
                    00D8   1081 G$P5_0$0$0 == 0x00d8
                    00D8   1082 _P5_0	=	0x00d8
                    00D9   1083 G$P5_1$0$0 == 0x00d9
                    00D9   1084 _P5_1	=	0x00d9
                    00DA   1085 G$P5_2$0$0 == 0x00da
                    00DA   1086 _P5_2	=	0x00da
                    00DB   1087 G$P5_3$0$0 == 0x00db
                    00DB   1088 _P5_3	=	0x00db
                    00DC   1089 G$P5_4$0$0 == 0x00dc
                    00DC   1090 _P5_4	=	0x00dc
                    00DD   1091 G$P5_5$0$0 == 0x00dd
                    00DD   1092 _P5_5	=	0x00dd
                    00DE   1093 G$P5_6$0$0 == 0x00de
                    00DE   1094 _P5_6	=	0x00de
                    00DF   1095 G$P5_7$0$0 == 0x00df
                    00DF   1096 _P5_7	=	0x00df
                    00E8   1097 G$AD0LJST$0$0 == 0x00e8
                    00E8   1098 _AD0LJST	=	0x00e8
                    00E9   1099 G$AD0WINT$0$0 == 0x00e9
                    00E9   1100 _AD0WINT	=	0x00e9
                    00EA   1101 G$AD0CM0$0$0 == 0x00ea
                    00EA   1102 _AD0CM0	=	0x00ea
                    00EB   1103 G$AD0CM1$0$0 == 0x00eb
                    00EB   1104 _AD0CM1	=	0x00eb
                    00EC   1105 G$AD0BUSY$0$0 == 0x00ec
                    00EC   1106 _AD0BUSY	=	0x00ec
                    00ED   1107 G$AD0INT$0$0 == 0x00ed
                    00ED   1108 _AD0INT	=	0x00ed
                    00EE   1109 G$AD0TM$0$0 == 0x00ee
                    00EE   1110 _AD0TM	=	0x00ee
                    00EF   1111 G$AD0EN$0$0 == 0x00ef
                    00EF   1112 _AD0EN	=	0x00ef
                    00E8   1113 G$AD2WINT$0$0 == 0x00e8
                    00E8   1114 _AD2WINT	=	0x00e8
                    00E9   1115 G$AD2CM0$0$0 == 0x00e9
                    00E9   1116 _AD2CM0	=	0x00e9
                    00EA   1117 G$AD2CM1$0$0 == 0x00ea
                    00EA   1118 _AD2CM1	=	0x00ea
                    00EB   1119 G$AD2CM2$0$0 == 0x00eb
                    00EB   1120 _AD2CM2	=	0x00eb
                    00EC   1121 G$AD2BUSY$0$0 == 0x00ec
                    00EC   1122 _AD2BUSY	=	0x00ec
                    00ED   1123 G$AD2INT$0$0 == 0x00ed
                    00ED   1124 _AD2INT	=	0x00ed
                    00EE   1125 G$AD2TM$0$0 == 0x00ee
                    00EE   1126 _AD2TM	=	0x00ee
                    00EF   1127 G$AD2EN$0$0 == 0x00ef
                    00EF   1128 _AD2EN	=	0x00ef
                    00E8   1129 G$P6_0$0$0 == 0x00e8
                    00E8   1130 _P6_0	=	0x00e8
                    00E9   1131 G$P6_1$0$0 == 0x00e9
                    00E9   1132 _P6_1	=	0x00e9
                    00EA   1133 G$P6_2$0$0 == 0x00ea
                    00EA   1134 _P6_2	=	0x00ea
                    00EB   1135 G$P6_3$0$0 == 0x00eb
                    00EB   1136 _P6_3	=	0x00eb
                    00EC   1137 G$P6_4$0$0 == 0x00ec
                    00EC   1138 _P6_4	=	0x00ec
                    00ED   1139 G$P6_5$0$0 == 0x00ed
                    00ED   1140 _P6_5	=	0x00ed
                    00EE   1141 G$P6_6$0$0 == 0x00ee
                    00EE   1142 _P6_6	=	0x00ee
                    00EF   1143 G$P6_7$0$0 == 0x00ef
                    00EF   1144 _P6_7	=	0x00ef
                    00F8   1145 G$SPIEN$0$0 == 0x00f8
                    00F8   1146 _SPIEN	=	0x00f8
                    00F9   1147 G$TXBMT$0$0 == 0x00f9
                    00F9   1148 _TXBMT	=	0x00f9
                    00FA   1149 G$NSSMD0$0$0 == 0x00fa
                    00FA   1150 _NSSMD0	=	0x00fa
                    00FB   1151 G$NSSMD1$0$0 == 0x00fb
                    00FB   1152 _NSSMD1	=	0x00fb
                    00FC   1153 G$RXOVRN$0$0 == 0x00fc
                    00FC   1154 _RXOVRN	=	0x00fc
                    00FD   1155 G$MODF$0$0 == 0x00fd
                    00FD   1156 _MODF	=	0x00fd
                    00FE   1157 G$WCOL$0$0 == 0x00fe
                    00FE   1158 _WCOL	=	0x00fe
                    00FF   1159 G$SPIF$0$0 == 0x00ff
                    00FF   1160 _SPIF	=	0x00ff
                    00F8   1161 G$P7_0$0$0 == 0x00f8
                    00F8   1162 _P7_0	=	0x00f8
                    00F9   1163 G$P7_1$0$0 == 0x00f9
                    00F9   1164 _P7_1	=	0x00f9
                    00FA   1165 G$P7_2$0$0 == 0x00fa
                    00FA   1166 _P7_2	=	0x00fa
                    00FB   1167 G$P7_3$0$0 == 0x00fb
                    00FB   1168 _P7_3	=	0x00fb
                    00FC   1169 G$P7_4$0$0 == 0x00fc
                    00FC   1170 _P7_4	=	0x00fc
                    00FD   1171 G$P7_5$0$0 == 0x00fd
                    00FD   1172 _P7_5	=	0x00fd
                    00FE   1173 G$P7_6$0$0 == 0x00fe
                    00FE   1174 _P7_6	=	0x00fe
                    00FF   1175 G$P7_7$0$0 == 0x00ff
                    00FF   1176 _P7_7	=	0x00ff
                           1177 ;--------------------------------------------------------
                           1178 ; overlayable register banks
                           1179 ;--------------------------------------------------------
                           1180 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                    1181 	.ds 8
                           1182 ;--------------------------------------------------------
                           1183 ; internal ram data
                           1184 ;--------------------------------------------------------
                           1185 	.area DSEG    (DATA)
                           1186 ;--------------------------------------------------------
                           1187 ; overlayable items in internal ram 
                           1188 ;--------------------------------------------------------
                           1189 	.area	OSEG    (OVR,DATA)
                           1190 	.area	OSEG    (OVR,DATA)
                           1191 	.area	OSEG    (OVR,DATA)
                           1192 	.area	OSEG    (OVR,DATA)
                           1193 	.area	OSEG    (OVR,DATA)
                           1194 	.area	OSEG    (OVR,DATA)
                           1195 	.area	OSEG    (OVR,DATA)
                           1196 ;--------------------------------------------------------
                           1197 ; Stack segment in internal ram 
                           1198 ;--------------------------------------------------------
                           1199 	.area	SSEG	(DATA)
   003B                    1200 __start__stack:
   003B                    1201 	.ds	1
                           1202 
                           1203 ;--------------------------------------------------------
                           1204 ; indirectly addressable internal ram data
                           1205 ;--------------------------------------------------------
                           1206 	.area ISEG    (DATA)
                           1207 ;--------------------------------------------------------
                           1208 ; absolute internal ram data
                           1209 ;--------------------------------------------------------
                           1210 	.area IABS    (ABS,DATA)
                           1211 	.area IABS    (ABS,DATA)
                           1212 ;--------------------------------------------------------
                           1213 ; bit data
                           1214 ;--------------------------------------------------------
                           1215 	.area BSEG    (BIT)
                           1216 ;--------------------------------------------------------
                           1217 ; paged external ram data
                           1218 ;--------------------------------------------------------
                           1219 	.area PSEG    (PAG,XDATA)
                           1220 ;--------------------------------------------------------
                           1221 ; external ram data
                           1222 ;--------------------------------------------------------
                           1223 	.area XSEG    (XDATA)
                           1224 ;--------------------------------------------------------
                           1225 ; absolute external ram data
                           1226 ;--------------------------------------------------------
                           1227 	.area XABS    (ABS,XDATA)
                           1228 ;--------------------------------------------------------
                           1229 ; external initialized ram data
                           1230 ;--------------------------------------------------------
                           1231 	.area XISEG   (XDATA)
                           1232 	.area HOME    (CODE)
                           1233 	.area GSINIT0 (CODE)
                           1234 	.area GSINIT1 (CODE)
                           1235 	.area GSINIT2 (CODE)
                           1236 	.area GSINIT3 (CODE)
                           1237 	.area GSINIT4 (CODE)
                           1238 	.area GSINIT5 (CODE)
                           1239 	.area GSINIT  (CODE)
                           1240 	.area GSFINAL (CODE)
                           1241 	.area CSEG    (CODE)
                           1242 ;--------------------------------------------------------
                           1243 ; interrupt vector 
                           1244 ;--------------------------------------------------------
                           1245 	.area HOME    (CODE)
   0000                    1246 __interrupt_vect:
   0000 02 00 08           1247 	ljmp	__sdcc_gsinit_startup
                           1248 ;--------------------------------------------------------
                           1249 ; global & static initialisations
                           1250 ;--------------------------------------------------------
                           1251 	.area HOME    (CODE)
                           1252 	.area GSINIT  (CODE)
                           1253 	.area GSFINAL (CODE)
                           1254 	.area GSINIT  (CODE)
                           1255 	.globl __sdcc_gsinit_startup
                           1256 	.globl __sdcc_program_startup
                           1257 	.globl __start__stack
                           1258 	.globl __mcs51_genXINIT
                           1259 	.globl __mcs51_genXRAMCLEAR
                           1260 	.globl __mcs51_genRAMCLEAR
                           1261 	.area GSFINAL (CODE)
   0061 02 00 03           1262 	ljmp	__sdcc_program_startup
                           1263 ;--------------------------------------------------------
                           1264 ; Home
                           1265 ;--------------------------------------------------------
                           1266 	.area HOME    (CODE)
                           1267 	.area HOME    (CODE)
   0003                    1268 __sdcc_program_startup:
   0003 12 00 77           1269 	lcall	_main
                           1270 ;	return from main will lock up
   0006 80 FE              1271 	sjmp .
                           1272 ;--------------------------------------------------------
                           1273 ; code
                           1274 ;--------------------------------------------------------
                           1275 	.area CSEG    (CODE)
                           1276 ;------------------------------------------------------------
                           1277 ;Allocation info for local variables in function 'putchar'
                           1278 ;------------------------------------------------------------
                           1279 ;c                         Allocated to registers r2 
                           1280 ;------------------------------------------------------------
                    0000   1281 	G$putchar$0$0 ==.
                    0000   1282 	C$putget.h$18$0$0 ==.
                           1283 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\/putget.h:18: void putchar(char c)
                           1284 ;	-----------------------------------------
                           1285 ;	 function putchar
                           1286 ;	-----------------------------------------
   0064                    1287 _putchar:
                    0002   1288 	ar2 = 0x02
                    0003   1289 	ar3 = 0x03
                    0004   1290 	ar4 = 0x04
                    0005   1291 	ar5 = 0x05
                    0006   1292 	ar6 = 0x06
                    0007   1293 	ar7 = 0x07
                    0000   1294 	ar0 = 0x00
                    0001   1295 	ar1 = 0x01
   0064 AA 82              1296 	mov	r2,dpl
                    0002   1297 	C$putget.h$20$1$1 ==.
                           1298 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\/putget.h:20: while(!TI0); 
   0066                    1299 00101$:
                    0002   1300 	C$putget.h$21$1$1 ==.
                           1301 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\/putget.h:21: TI0=0;
   0066 10 99 02           1302 	jbc	_TI0,00108$
   0069 80 FB              1303 	sjmp	00101$
   006B                    1304 00108$:
                    0007   1305 	C$putget.h$22$1$1 ==.
                           1306 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\/putget.h:22: SBUF0 = c;
   006B 8A 99              1307 	mov	_SBUF0,r2
                    0009   1308 	C$putget.h$23$1$1 ==.
                    0009   1309 	XG$putchar$0$0 ==.
   006D 22                 1310 	ret
                           1311 ;------------------------------------------------------------
                           1312 ;Allocation info for local variables in function 'getchar'
                           1313 ;------------------------------------------------------------
                           1314 ;c                         Allocated to registers 
                           1315 ;------------------------------------------------------------
                    000A   1316 	G$getchar$0$0 ==.
                    000A   1317 	C$putget.h$28$1$1 ==.
                           1318 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\/putget.h:28: char getchar(void)
                           1319 ;	-----------------------------------------
                           1320 ;	 function getchar
                           1321 ;	-----------------------------------------
   006E                    1322 _getchar:
                    000A   1323 	C$putget.h$31$1$1 ==.
                           1324 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\/putget.h:31: while(!RI0);
   006E                    1325 00101$:
                    000A   1326 	C$putget.h$32$1$1 ==.
                           1327 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\/putget.h:32: RI0 =0;
   006E 10 98 02           1328 	jbc	_RI0,00108$
   0071 80 FB              1329 	sjmp	00101$
   0073                    1330 00108$:
                    000F   1331 	C$putget.h$33$1$1 ==.
                           1332 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\/putget.h:33: c = SBUF0;
   0073 85 99 82           1333 	mov	dpl,_SBUF0
                    0012   1334 	C$putget.h$35$1$1 ==.
                           1335 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\/putget.h:35: return c;
                    0012   1336 	C$putget.h$36$1$1 ==.
                    0012   1337 	XG$getchar$0$0 ==.
   0076 22                 1338 	ret
                           1339 ;------------------------------------------------------------
                           1340 ;Allocation info for local variables in function 'main'
                           1341 ;------------------------------------------------------------
                           1342 ;high                      Allocated to registers r2 
                           1343 ;low                       Allocated to registers 
                           1344 ;------------------------------------------------------------
                    0013   1345 	G$main$0$0 ==.
                    0013   1346 	C$lab4_3_2.c$32$1$1 ==.
                           1347 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:32: void main(void)
                           1348 ;	-----------------------------------------
                           1349 ;	 function main
                           1350 ;	-----------------------------------------
   0077                    1351 _main:
                    0013   1352 	C$lab4_3_2.c$36$1$1 ==.
                           1353 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:36: WDTCN = 0xDE;						// Disable the watchdog timer
   0077 75 FF DE           1354 	mov	_WDTCN,#0xDE
                    0016   1355 	C$lab4_3_2.c$37$1$1 ==.
                           1356 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:37: WDTCN = 0xAD;						// Note: = "DEAD"!
   007A 75 FF AD           1357 	mov	_WDTCN,#0xAD
                    0019   1358 	C$lab4_3_2.c$39$1$1 ==.
                           1359 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:39: SYSCLK_INIT();						// Initialize the oscillator
   007D 12 00 D5           1360 	lcall	_SYSCLK_INIT
                    001C   1361 	C$lab4_3_2.c$40$1$1 ==.
                           1362 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:40: PORT_INIT();						// Initialize the Crossbar and GPIO
   0080 12 00 F8           1363 	lcall	_PORT_INIT
                    001F   1364 	C$lab4_3_2.c$41$1$1 ==.
                           1365 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:41: UART0_INIT();						// Initialize UART0
   0083 12 01 15           1366 	lcall	_UART0_INIT
                    0022   1367 	C$lab4_3_2.c$42$1$1 ==.
                           1368 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:42: ADC_Init();							// Initialize ADC0
   0086 12 01 39           1369 	lcall	_ADC_Init
                    0025   1370 	C$lab4_3_2.c$43$1$1 ==.
                           1371 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:43: DAC_Init();
   0089 12 01 4D           1372 	lcall	_DAC_Init
                    0028   1373 	C$lab4_3_2.c$45$1$1 ==.
                           1374 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:45: SFRPAGE = UART0_PAGE;				// Direct output to UART0
   008C 75 84 00           1375 	mov	_SFRPAGE,#0x00
                    002B   1376 	C$lab4_3_2.c$50$1$1 ==.
                           1377 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:50: ADC0CN &= ~0x0C;
   008F 53 E8 F3           1378 	anl	_ADC0CN,#0xF3
                    002E   1379 	C$lab4_3_2.c$52$1$1 ==.
                           1380 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:52: AD0INT = 0;
   0092 C2 ED              1381 	clr	_AD0INT
                    0030   1382 	C$lab4_3_2.c$54$1$1 ==.
                           1383 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:54: AD0BUSY = 1;
   0094 D2 EC              1384 	setb	_AD0BUSY
                    0032   1385 	C$lab4_3_2.c$57$1$1 ==.
                           1386 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:57: while(AD0INT != 0);
   0096                    1387 00101$:
   0096 20 ED FD           1388 	jb	_AD0INT,00101$
                    0035   1389 	C$lab4_3_2.c$60$1$1 ==.
                           1390 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:60: printf("\033[2J");					//clear screen
   0099 74 65              1391 	mov	a,#__str_0
   009B C0 E0              1392 	push	acc
   009D 74 07              1393 	mov	a,#(__str_0 >> 8)
   009F C0 E0              1394 	push	acc
   00A1 74 80              1395 	mov	a,#0x80
   00A3 C0 E0              1396 	push	acc
   00A5 12 01 7F           1397 	lcall	_printf
   00A8 15 81              1398 	dec	sp
   00AA 15 81              1399 	dec	sp
   00AC 15 81              1400 	dec	sp
                    004A   1401 	C$lab4_3_2.c$61$1$1 ==.
                           1402 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:61: printf("Fire and blood. \n\r");		//running
   00AE 74 6A              1403 	mov	a,#__str_1
   00B0 C0 E0              1404 	push	acc
   00B2 74 07              1405 	mov	a,#(__str_1 >> 8)
   00B4 C0 E0              1406 	push	acc
   00B6 74 80              1407 	mov	a,#0x80
   00B8 C0 E0              1408 	push	acc
   00BA 12 01 7F           1409 	lcall	_printf
   00BD 15 81              1410 	dec	sp
   00BF 15 81              1411 	dec	sp
   00C1 15 81              1412 	dec	sp
                    005F   1413 	C$lab4_3_2.c$63$1$1 ==.
                           1414 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:63: while(1)
   00C3                    1415 00108$:
                    005F   1416 	C$lab4_3_2.c$66$2$2 ==.
                           1417 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:66: AD0INT = 0;
   00C3 C2 ED              1418 	clr	_AD0INT
                    0061   1419 	C$lab4_3_2.c$69$2$2 ==.
                           1420 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:69: AD0BUSY = 1;
   00C5 D2 EC              1421 	setb	_AD0BUSY
                    0063   1422 	C$lab4_3_2.c$72$2$2 ==.
                           1423 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:72: while(AD0INT == 0);
   00C7                    1424 00104$:
   00C7 30 ED FD           1425 	jnb	_AD0INT,00104$
                    0066   1426 	C$lab4_3_2.c$73$2$2 ==.
                           1427 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:73: AD0BUSY = 0;
   00CA C2 EC              1428 	clr	_AD0BUSY
                    0068   1429 	C$lab4_3_2.c$77$2$2 ==.
                           1430 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:77: high = ADC0H;
   00CC AA BF              1431 	mov	r2,_ADC0H
                    006A   1432 	C$lab4_3_2.c$78$2$2 ==.
                           1433 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:78: low = ADC0L;
   00CE 85 BE D2           1434 	mov	_DAC0L,_ADC0L
                    006D   1435 	C$lab4_3_2.c$81$2$2 ==.
                           1436 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:81: DAC0H = high;
   00D1 8A D3              1437 	mov	_DAC0H,r2
                    006F   1438 	C$lab4_3_2.c$86$1$1 ==.
                    006F   1439 	XG$main$0$0 ==.
   00D3 80 EE              1440 	sjmp	00108$
                           1441 ;------------------------------------------------------------
                           1442 ;Allocation info for local variables in function 'SYSCLK_INIT'
                           1443 ;------------------------------------------------------------
                           1444 ;i                         Allocated to registers r3 r4 
                           1445 ;SFRPAGE_SAVE              Allocated to registers r2 
                           1446 ;------------------------------------------------------------
                    0071   1447 	G$SYSCLK_INIT$0$0 ==.
                    0071   1448 	C$lab4_3_2.c$94$1$1 ==.
                           1449 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:94: void SYSCLK_INIT(void)
                           1450 ;	-----------------------------------------
                           1451 ;	 function SYSCLK_INIT
                           1452 ;	-----------------------------------------
   00D5                    1453 _SYSCLK_INIT:
                    0071   1454 	C$lab4_3_2.c$99$1$1 ==.
                           1455 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:99: SFRPAGE_SAVE = SFRPAGE;				// Save Current SFR page	SFRPAGE = CONFIG_PAGE;
   00D5 AA 84              1456 	mov	r2,_SFRPAGE
                    0073   1457 	C$lab4_3_2.c$100$1$1 ==.
                           1458 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:100: SFRPAGE   = CONFIG_PAGE;
   00D7 75 84 0F           1459 	mov	_SFRPAGE,#0x0F
                    0076   1460 	C$lab4_3_2.c$102$1$1 ==.
                           1461 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:102: OSCXCN = 0x67;						// Start ext osc with 22.1184MHz crystal
   00DA 75 8C 67           1462 	mov	_OSCXCN,#0x67
                    0079   1463 	C$lab4_3_2.c$103$1$1 ==.
                           1464 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:103: for(i=0; i < 3000; i++);			// Wait for the oscillator to start up
   00DD 7B B8              1465 	mov	r3,#0xB8
   00DF 7C 0B              1466 	mov	r4,#0x0B
   00E1                    1467 00106$:
   00E1 1B                 1468 	dec	r3
   00E2 BB FF 01           1469 	cjne	r3,#0xff,00114$
   00E5 1C                 1470 	dec	r4
   00E6                    1471 00114$:
   00E6 EB                 1472 	mov	a,r3
   00E7 4C                 1473 	orl	a,r4
   00E8 70 F7              1474 	jnz	00106$
                    0086   1475 	C$lab4_3_2.c$104$1$1 ==.
                           1476 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:104: while(!(OSCXCN & 0x80));
   00EA                    1477 00101$:
   00EA E5 8C              1478 	mov	a,_OSCXCN
   00EC 30 E7 FB           1479 	jnb	acc.7,00101$
                    008B   1480 	C$lab4_3_2.c$105$1$1 ==.
                           1481 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:105: CLKSEL = 0x01;						// Switch to the external crystal oscillator
   00EF 75 97 01           1482 	mov	_CLKSEL,#0x01
                    008E   1483 	C$lab4_3_2.c$106$1$1 ==.
                           1484 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:106: OSCICN = 0x00;						// Disable the internal oscillator
   00F2 75 8A 00           1485 	mov	_OSCICN,#0x00
                    0091   1486 	C$lab4_3_2.c$108$1$1 ==.
                           1487 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:108: SFRPAGE = SFRPAGE_SAVE;             // Restore SFR page
   00F5 8A 84              1488 	mov	_SFRPAGE,r2
                    0093   1489 	C$lab4_3_2.c$109$1$1 ==.
                    0093   1490 	XG$SYSCLK_INIT$0$0 ==.
   00F7 22                 1491 	ret
                           1492 ;------------------------------------------------------------
                           1493 ;Allocation info for local variables in function 'PORT_INIT'
                           1494 ;------------------------------------------------------------
                           1495 ;SFRPAGE_SAVE              Allocated to registers r2 
                           1496 ;------------------------------------------------------------
                    0094   1497 	G$PORT_INIT$0$0 ==.
                    0094   1498 	C$lab4_3_2.c$111$1$1 ==.
                           1499 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:111: void PORT_INIT(void)
                           1500 ;	-----------------------------------------
                           1501 ;	 function PORT_INIT
                           1502 ;	-----------------------------------------
   00F8                    1503 _PORT_INIT:
                    0094   1504 	C$lab4_3_2.c$115$1$1 ==.
                           1505 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:115: SFRPAGE_SAVE = SFRPAGE;				// Save Current SFR page
   00F8 AA 84              1506 	mov	r2,_SFRPAGE
                    0096   1507 	C$lab4_3_2.c$116$1$1 ==.
                           1508 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:116: SFRPAGE = CONFIG_PAGE;
   00FA 75 84 0F           1509 	mov	_SFRPAGE,#0x0F
                    0099   1510 	C$lab4_3_2.c$118$1$1 ==.
                           1511 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:118: XBR0	 = 0x04;					// Enable UART0
   00FD 75 E1 04           1512 	mov	_XBR0,#0x04
                    009C   1513 	C$lab4_3_2.c$119$1$1 ==.
                           1514 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:119: XBR1	 = 0x00;
   0100 75 E2 00           1515 	mov	_XBR1,#0x00
                    009F   1516 	C$lab4_3_2.c$120$1$1 ==.
                           1517 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:120: XBR2	 = 0x40;					// Enable Crossbar and weak pull-up
   0103 75 E3 40           1518 	mov	_XBR2,#0x40
                    00A2   1519 	C$lab4_3_2.c$122$1$1 ==.
                           1520 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:122: P0MDOUT &= ~0x01;					// Set P0.0 to open-drain
   0106 53 A4 FE           1521 	anl	_P0MDOUT,#0xFE
                    00A5   1522 	C$lab4_3_2.c$123$1$1 ==.
                           1523 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:123: P0 |= 0x01;							// P0.0 high-impedence
   0109 43 80 01           1524 	orl	_P0,#0x01
                    00A8   1525 	C$lab4_3_2.c$124$1$1 ==.
                           1526 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:124: P1MDOUT	&= ~0x03;					// Set P1.0 to open-drain
   010C 53 A5 FC           1527 	anl	_P1MDOUT,#0xFC
                    00AB   1528 	C$lab4_3_2.c$125$1$1 ==.
                           1529 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:125: P1 |= 0x03;							// P1.0 to high-impedence
   010F 43 90 03           1530 	orl	_P1,#0x03
                    00AE   1531 	C$lab4_3_2.c$128$1$1 ==.
                           1532 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:128: SFRPAGE = SFRPAGE_SAVE;             // Restore SFR page
   0112 8A 84              1533 	mov	_SFRPAGE,r2
                    00B0   1534 	C$lab4_3_2.c$129$1$1 ==.
                    00B0   1535 	XG$PORT_INIT$0$0 ==.
   0114 22                 1536 	ret
                           1537 ;------------------------------------------------------------
                           1538 ;Allocation info for local variables in function 'UART0_INIT'
                           1539 ;------------------------------------------------------------
                           1540 ;SFRPAGE_SAVE              Allocated to registers r2 
                           1541 ;------------------------------------------------------------
                    00B1   1542 	G$UART0_INIT$0$0 ==.
                    00B1   1543 	C$lab4_3_2.c$137$1$1 ==.
                           1544 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:137: void UART0_INIT(void)
                           1545 ;	-----------------------------------------
                           1546 ;	 function UART0_INIT
                           1547 ;	-----------------------------------------
   0115                    1548 _UART0_INIT:
                    00B1   1549 	C$lab4_3_2.c$141$1$1 ==.
                           1550 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:141: SFRPAGE_SAVE = SFRPAGE;				// Save Current SFR page
   0115 AA 84              1551 	mov	r2,_SFRPAGE
                    00B3   1552 	C$lab4_3_2.c$142$1$1 ==.
                           1553 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:142: SFRPAGE = TIMER01_PAGE;
   0117 75 84 00           1554 	mov	_SFRPAGE,#0x00
                    00B6   1555 	C$lab4_3_2.c$144$1$1 ==.
                           1556 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:144: TCON	 = 0x40;
   011A 75 88 40           1557 	mov	_TCON,#0x40
                    00B9   1558 	C$lab4_3_2.c$145$1$1 ==.
                           1559 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:145: TMOD	&= 0x0F;
   011D 53 89 0F           1560 	anl	_TMOD,#0x0F
                    00BC   1561 	C$lab4_3_2.c$146$1$1 ==.
                           1562 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:146: TMOD	|= 0x20;					// Timer1, Mode 2, 8-bit reload
   0120 43 89 20           1563 	orl	_TMOD,#0x20
                    00BF   1564 	C$lab4_3_2.c$147$1$1 ==.
                           1565 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:147: CKCON	|= 0x10;					// Timer1 uses SYSCLK as time base
   0123 43 8E 10           1566 	orl	_CKCON,#0x10
                    00C2   1567 	C$lab4_3_2.c$149$1$1 ==.
                           1568 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:149: TH1		 = 0xE8;					// 0xE8 = 232
   0126 75 8D E8           1569 	mov	_TH1,#0xE8
                    00C5   1570 	C$lab4_3_2.c$150$1$1 ==.
                           1571 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:150: TR1		 = 1;						// Start Timer1
   0129 D2 8E              1572 	setb	_TR1
                    00C7   1573 	C$lab4_3_2.c$152$1$1 ==.
                           1574 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:152: SFRPAGE = UART0_PAGE;
   012B 75 84 00           1575 	mov	_SFRPAGE,#0x00
                    00CA   1576 	C$lab4_3_2.c$153$1$1 ==.
                           1577 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:153: SCON0	 = 0x50;					// Mode 1, 8-bit UART, enable RX
   012E 75 98 50           1578 	mov	_SCON0,#0x50
                    00CD   1579 	C$lab4_3_2.c$154$1$1 ==.
                           1580 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:154: SSTA0	 = 0x00;					// SMOD0 = 0, in this mode
   0131 75 91 00           1581 	mov	_SSTA0,#0x00
                    00D0   1582 	C$lab4_3_2.c$157$1$1 ==.
                           1583 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:157: TI0 = 1;							// Indicate TX0 ready
   0134 D2 99              1584 	setb	_TI0
                    00D2   1585 	C$lab4_3_2.c$159$1$1 ==.
                           1586 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:159: SFRPAGE = SFRPAGE_SAVE;             // Restore SFR page
   0136 8A 84              1587 	mov	_SFRPAGE,r2
                    00D4   1588 	C$lab4_3_2.c$160$1$1 ==.
                    00D4   1589 	XG$UART0_INIT$0$0 ==.
   0138 22                 1590 	ret
                           1591 ;------------------------------------------------------------
                           1592 ;Allocation info for local variables in function 'ADC_Init'
                           1593 ;------------------------------------------------------------
                           1594 ;SFRPAGE_SAVE              Allocated to registers r2 
                           1595 ;------------------------------------------------------------
                    00D5   1596 	G$ADC_Init$0$0 ==.
                    00D5   1597 	C$lab4_3_2.c$162$1$1 ==.
                           1598 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:162: void ADC_Init(void)
                           1599 ;	-----------------------------------------
                           1600 ;	 function ADC_Init
                           1601 ;	-----------------------------------------
   0139                    1602 _ADC_Init:
                    00D5   1603 	C$lab4_3_2.c$166$1$1 ==.
                           1604 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:166: SFRPAGE_SAVE = SFRPAGE;				// Save Current SFR page
   0139 AA 84              1605 	mov	r2,_SFRPAGE
                    00D7   1606 	C$lab4_3_2.c$167$1$1 ==.
                           1607 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:167: SFRPAGE = ADC0_PAGE;
   013B 75 84 00           1608 	mov	_SFRPAGE,#0x00
                    00DA   1609 	C$lab4_3_2.c$169$1$1 ==.
                           1610 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:169: ADC0CN = 0x80;						//enable ADC0
   013E 75 E8 80           1611 	mov	_ADC0CN,#0x80
                    00DD   1612 	C$lab4_3_2.c$170$1$1 ==.
                           1613 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:170: REF0CN = 0x02;						//Use VREF0, internal bias generator, reference buffer off
   0141 75 D1 02           1614 	mov	_REF0CN,#0x02
                    00E0   1615 	C$lab4_3_2.c$171$1$1 ==.
                           1616 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:171: AMX0SL = 0x00;						//use 0.0 as  'independent single-ended input'
   0144 75 BB 00           1617 	mov	_AMX0SL,#0x00
                    00E3   1618 	C$lab4_3_2.c$172$1$1 ==.
                           1619 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:172: AMX0CF = 0x00;
   0147 75 BA 00           1620 	mov	_AMX0CF,#0x00
                    00E6   1621 	C$lab4_3_2.c$174$1$1 ==.
                           1622 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:174: SFRPAGE = SFRPAGE_SAVE;             // Restore SFR page
   014A 8A 84              1623 	mov	_SFRPAGE,r2
                    00E8   1624 	C$lab4_3_2.c$175$1$1 ==.
                    00E8   1625 	XG$ADC_Init$0$0 ==.
   014C 22                 1626 	ret
                           1627 ;------------------------------------------------------------
                           1628 ;Allocation info for local variables in function 'DAC_Init'
                           1629 ;------------------------------------------------------------
                           1630 ;SFRPAGE_SAVE              Allocated to registers r2 
                           1631 ;------------------------------------------------------------
                    00E9   1632 	G$DAC_Init$0$0 ==.
                    00E9   1633 	C$lab4_3_2.c$178$1$1 ==.
                           1634 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:178: void DAC_Init(void)
                           1635 ;	-----------------------------------------
                           1636 ;	 function DAC_Init
                           1637 ;	-----------------------------------------
   014D                    1638 _DAC_Init:
                    00E9   1639 	C$lab4_3_2.c$182$1$1 ==.
                           1640 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:182: SFRPAGE_SAVE = SFRPAGE;				// Save Current SFR page
   014D AA 84              1641 	mov	r2,_SFRPAGE
                    00EB   1642 	C$lab4_3_2.c$183$1$1 ==.
                           1643 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:183: SFRPAGE = DAC0_PAGE;
   014F 75 84 00           1644 	mov	_SFRPAGE,#0x00
                    00EE   1645 	C$lab4_3_2.c$187$1$1 ==.
                           1646 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:187: DAC0CN |= 0x80;		//enable DAC0
   0152 43 D4 80           1647 	orl	_DAC0CN,#0x80
                    00F1   1648 	C$lab4_3_2.c$188$1$1 ==.
                           1649 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:188: DAC0CN &= 0xE0;		//gain = 1, manual conversion mode	
   0155 53 D4 E0           1650 	anl	_DAC0CN,#0xE0
                    00F4   1651 	C$lab4_3_2.c$190$1$1 ==.
                           1652 ;	C:\Users\SSP\Documents\Microprocessor Systems\Lab 4\lab4-3-2.c:190: SFRPAGE = SFRPAGE_SAVE;             // Restore SFR page
   0158 8A 84              1653 	mov	_SFRPAGE,r2
                    00F6   1654 	C$lab4_3_2.c$191$1$1 ==.
                    00F6   1655 	XG$DAC_Init$0$0 ==.
   015A 22                 1656 	ret
                           1657 	.area CSEG    (CODE)
                           1658 	.area CONST   (CODE)
                    0000   1659 Flab4_3_2$_str_0$0$0 == .
   0765                    1660 __str_0:
   0765 1B                 1661 	.db 0x1B
   0766 5B 32 4A           1662 	.ascii "[2J"
   0769 00                 1663 	.db 0x00
                    0005   1664 Flab4_3_2$_str_1$0$0 == .
   076A                    1665 __str_1:
   076A 46 69 72 65 20 61  1666 	.ascii "Fire and blood. "
        6E 64 20 62 6C 6F
        6F 64 2E 20
   077A 0A                 1667 	.db 0x0A
   077B 0D                 1668 	.db 0x0D
   077C 00                 1669 	.db 0x00
                           1670 	.area XINIT   (CODE)
                           1671 	.area CABS    (ABS,CODE)
